<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='airlines' inline='true' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airlines' name='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Project Abdelrahman Emad' filename='airports.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='airlines.csv' table='[airlines#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='IATA_CODE' ordinal='0' />
            <column datatype='string' name='AIRLINE' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRPORT' ordinal='1' />
              <column datatype='string' name='CITY' ordinal='2' />
              <column datatype='string' name='STATE' ordinal='3' />
              <column datatype='string' name='COUNTRY' ordinal='4' />
              <column datatype='real' name='LATITUDE' ordinal='5' />
              <column datatype='real' name='LONGITUDE' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='airlines.csv' table='[airlines#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRLINE' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='flights.csv' table='[flights#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
              <column datatype='integer' name='YEAR' ordinal='3' />
              <column datatype='integer' name='MONTH' ordinal='4' />
              <column datatype='integer' name='DAY' ordinal='5' />
              <column datatype='integer' name='DAY_OF_WEEK' ordinal='6' />
              <column datatype='string' name='AIRLINE' ordinal='7' />
              <column datatype='integer' name='FLIGHT_NUMBER' ordinal='8' />
              <column datatype='string' name='TAIL_NUMBER' ordinal='9' />
              <column datatype='string' name='ORIGIN_AIRPORT' ordinal='10' />
              <column datatype='string' name='DESTINATION_AIRPORT' ordinal='11' />
              <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='12' />
              <column datatype='real' name='DEPARTURE_TIME' ordinal='13' />
              <column datatype='real' name='DEPARTURE_DELAY' ordinal='14' />
              <column datatype='real' name='TAXI_OUT' ordinal='15' />
              <column datatype='real' name='WHEELS_OFF' ordinal='16' />
              <column datatype='real' name='SCHEDULED_TIME' ordinal='17' />
              <column datatype='real' name='ELAPSED_TIME' ordinal='18' />
              <column datatype='real' name='AIR_TIME' ordinal='19' />
              <column datatype='integer' name='DISTANCE' ordinal='20' />
              <column datatype='real' name='WHEELS_ON' ordinal='21' />
              <column datatype='real' name='TAXI_IN' ordinal='22' />
              <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='23' />
              <column datatype='real' name='ARRIVAL_TIME' ordinal='24' />
              <column datatype='real' name='ARRIVAL_DELAY' ordinal='25' />
              <column datatype='integer' name='DIVERTED' ordinal='26' />
              <column datatype='integer' name='CANCELLED' ordinal='27' />
              <column datatype='string' name='CANCELLATION_REASON' ordinal='28' />
              <column datatype='real' name='AIR_SYSTEM_DELAY' ordinal='29' />
              <column datatype='real' name='SECURITY_DELAY' ordinal='30' />
              <column datatype='real' name='AIRLINE_DELAY' ordinal='31' />
              <column datatype='real' name='LATE_AIRCRAFT_DELAY' ordinal='32' />
              <column datatype='real' name='WEATHER_DELAY' ordinal='33' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AIRLINE (flights.csv)]' value='[flights.csv].[AIRLINE]' />
          <map key='[AIRLINE]' value='[airlines.csv].[AIRLINE]' />
          <map key='[AIRLINE_DELAY]' value='[flights.csv].[AIRLINE_DELAY]' />
          <map key='[AIRPORT]' value='[airports.csv].[AIRPORT]' />
          <map key='[AIR_SYSTEM_DELAY]' value='[flights.csv].[AIR_SYSTEM_DELAY]' />
          <map key='[AIR_TIME]' value='[flights.csv].[AIR_TIME]' />
          <map key='[ARRIVAL_DELAY]' value='[flights.csv].[ARRIVAL_DELAY]' />
          <map key='[ARRIVAL_TIME]' value='[flights.csv].[ARRIVAL_TIME]' />
          <map key='[CANCELLATION_REASON]' value='[flights.csv].[CANCELLATION_REASON]' />
          <map key='[CANCELLED]' value='[flights.csv].[CANCELLED]' />
          <map key='[CITY]' value='[airports.csv].[CITY]' />
          <map key='[COUNTRY]' value='[airports.csv].[COUNTRY]' />
          <map key='[DAY]' value='[flights.csv].[DAY]' />
          <map key='[DAY_OF_WEEK]' value='[flights.csv].[DAY_OF_WEEK]' />
          <map key='[DEPARTURE_DELAY]' value='[flights.csv].[DEPARTURE_DELAY]' />
          <map key='[DEPARTURE_TIME]' value='[flights.csv].[DEPARTURE_TIME]' />
          <map key='[DESTINATION_AIRPORT]' value='[flights.csv].[DESTINATION_AIRPORT]' />
          <map key='[DISTANCE]' value='[flights.csv].[DISTANCE]' />
          <map key='[DIVERTED]' value='[flights.csv].[DIVERTED]' />
          <map key='[ELAPSED_TIME]' value='[flights.csv].[ELAPSED_TIME]' />
          <map key='[F1]' value='[flights.csv].[F1]' />
          <map key='[FLIGHT_NUMBER]' value='[flights.csv].[FLIGHT_NUMBER]' />
          <map key='[IATA_CODE (airlines.csv)]' value='[airlines.csv].[IATA_CODE]' />
          <map key='[IATA_CODE]' value='[airports.csv].[IATA_CODE]' />
          <map key='[LATE_AIRCRAFT_DELAY]' value='[flights.csv].[LATE_AIRCRAFT_DELAY]' />
          <map key='[LATITUDE]' value='[airports.csv].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[airports.csv].[LONGITUDE]' />
          <map key='[MONTH]' value='[flights.csv].[MONTH]' />
          <map key='[ORIGIN_AIRPORT]' value='[flights.csv].[ORIGIN_AIRPORT]' />
          <map key='[SCHEDULED_ARRIVAL]' value='[flights.csv].[SCHEDULED_ARRIVAL]' />
          <map key='[SCHEDULED_DEPARTURE]' value='[flights.csv].[SCHEDULED_DEPARTURE]' />
          <map key='[SCHEDULED_TIME]' value='[flights.csv].[SCHEDULED_TIME]' />
          <map key='[SECURITY_DELAY]' value='[flights.csv].[SECURITY_DELAY]' />
          <map key='[STATE]' value='[airports.csv].[STATE]' />
          <map key='[TAIL_NUMBER]' value='[flights.csv].[TAIL_NUMBER]' />
          <map key='[TAXI_IN]' value='[flights.csv].[TAXI_IN]' />
          <map key='[TAXI_OUT]' value='[flights.csv].[TAXI_OUT]' />
          <map key='[Unnamed: 0.1]' value='[flights.csv].[Unnamed: 0.1]' />
          <map key='[Unnamed: 0]' value='[flights.csv].[Unnamed: 0]' />
          <map key='[WEATHER_DELAY]' value='[flights.csv].[WEATHER_DELAY]' />
          <map key='[WHEELS_OFF]' value='[flights.csv].[WHEELS_OFF]' />
          <map key='[WHEELS_ON]' value='[flights.csv].[WHEELS_ON]' />
          <map key='[YEAR]' value='[flights.csv].[YEAR]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_CODE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airports.csv_0627B06A491E4343AF7B4EB809BB4069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_CODE (airlines.csv)]</local-name>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airlines.csv_585A3091A4854F54A15436A52D7682CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRLINE]</local-name>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias>AIRLINE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airlines.csv_585A3091A4854F54A15436A52D7682CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DAY</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_OF_WEEK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY_OF_WEEK]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DAY_OF_WEEK</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRLINE (flights.csv)]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIRLINE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FLIGHT_NUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FLIGHT_NUMBER]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FLIGHT_NUMBER</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAIL_NUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TAIL_NUMBER]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TAIL_NUMBER</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORIGIN_AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORIGIN_AIRPORT]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ORIGIN_AIRPORT</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DESTINATION_AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DESTINATION_AIRPORT]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DESTINATION_AIRPORT</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_DEPARTURE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_DEPARTURE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SCHEDULED_DEPARTURE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEPARTURE_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DEPARTURE_TIME</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEPARTURE_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DEPARTURE_DELAY</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_OUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TAXI_OUT]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TAXI_OUT</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_OFF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WHEELS_OFF]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WHEELS_OFF</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SCHEDULED_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SCHEDULED_TIME</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELAPSED_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ELAPSED_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ELAPSED_TIME</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AIR_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIR_TIME</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISTANCE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DISTANCE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DISTANCE</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_ON</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WHEELS_ON]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WHEELS_ON</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_IN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TAXI_IN]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TAXI_IN</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_ARRIVAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_ARRIVAL]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SCHEDULED_ARRIVAL</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ARRIVAL_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ARRIVAL_TIME</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ARRIVAL_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ARRIVAL_DELAY</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVERTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DIVERTED]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DIVERTED</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CANCELLED]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CANCELLED</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLATION_REASON</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CANCELLATION_REASON]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CANCELLATION_REASON</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_SYSTEM_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AIR_SYSTEM_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIR_SYSTEM_DELAY</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECURITY_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SECURITY_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SECURITY_DELAY</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AIRLINE_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIRLINE_DELAY</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WEATHER_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WEATHER_DELAY</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
      <column caption='Airline Delay' datatype='real' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column caption='Air System Delay' datatype='real' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='real' name='[AIR_TIME]' role='measure' type='quantitative' />
      <column caption='Arrival Delay' datatype='real' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
      <column caption='Arrival Time' datatype='real' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
      <column caption='Cancellation Reason' datatype='string' name='[CANCELLATION_REASON]' role='dimension' type='nominal' />
      <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='sum of cancel' datatype='real' name='[Calculation_89509094008815639]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column aggregation='None' datatype='integer' name='[Cancelled (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[CANCELLED]' peg='0' size='0.303' />
      </column>
      <column datatype='integer' name='[DAY]' role='dimension' type='quantitative' />
      <column caption='Day Of Week' datatype='integer' name='[DAY_OF_WEEK]' role='dimension' type='quantitative' />
      <column caption='Departure Delay' datatype='real' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='real' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
      <column caption='Destination Airport' datatype='string' name='[DESTINATION_AIRPORT]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
      <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
      <column caption='Elapsed Time' datatype='real' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
      <column caption='Flight Number' datatype='integer' name='[FLIGHT_NUMBER]' role='dimension' type='ordinal' />
      <column caption='IATA CODE (airlines.csv)' datatype='string' name='[IATA_CODE (airlines.csv)]' role='dimension' type='nominal' />
      <column caption='Iata Code' datatype='string' name='[IATA_CODE]' role='dimension' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='real' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
      <column caption='Origin Airport' datatype='string' name='[ORIGIN_AIRPORT]' role='dimension' type='nominal' />
      <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
      <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
      <column caption='Scheduled Time' datatype='real' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tail Number' datatype='string' name='[TAIL_NUMBER]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='real' name='[TAXI_IN]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='real' name='[TAXI_OUT]' role='measure' type='quantitative' />
      <column caption='Weather Delay' datatype='real' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
      <column caption='Wheels Off' datatype='real' name='[WHEELS_OFF]' role='measure' type='quantitative' />
      <column caption='Wheels On' datatype='real' name='[WHEELS_ON]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='airlines.csv' datatype='table' name='[__tableau_internal_object_id__].[airlines.csv_585A3091A4854F54A15436A52D7682CA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='airports.csv' datatype='table' name='[__tableau_internal_object_id__].[airports.csv_0627B06A491E4343AF7B4EB809BB4069]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='flights.csv' datatype='table' name='[__tableau_internal_object_id__].[flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67]' role='measure' type='quantitative' />
      <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='COUNTRY, STATE, CITY' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Egypt&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airlines.csv' id='airlines.csv_585A3091A4854F54A15436A52D7682CA'>
            <properties context=''>
              <relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='airlines.csv' table='[airlines#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='IATA_CODE' ordinal='0' />
                  <column datatype='string' name='AIRLINE' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='airports.csv' id='airports.csv_0627B06A491E4343AF7B4EB809BB4069'>
            <properties context=''>
              <relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='airports.csv' table='[airports#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='IATA_CODE' ordinal='0' />
                  <column datatype='string' name='AIRPORT' ordinal='1' />
                  <column datatype='string' name='CITY' ordinal='2' />
                  <column datatype='string' name='STATE' ordinal='3' />
                  <column datatype='string' name='COUNTRY' ordinal='4' />
                  <column datatype='real' name='LATITUDE' ordinal='5' />
                  <column datatype='real' name='LONGITUDE' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='flights.csv' id='flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67'>
            <properties context=''>
              <relation connection='textscan.13wkc1a1qvs7xl0zx4ulu08wtgma' name='flights.csv' table='[flights#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
                  <column datatype='integer' name='YEAR' ordinal='3' />
                  <column datatype='integer' name='MONTH' ordinal='4' />
                  <column datatype='integer' name='DAY' ordinal='5' />
                  <column datatype='integer' name='DAY_OF_WEEK' ordinal='6' />
                  <column datatype='string' name='AIRLINE' ordinal='7' />
                  <column datatype='integer' name='FLIGHT_NUMBER' ordinal='8' />
                  <column datatype='string' name='TAIL_NUMBER' ordinal='9' />
                  <column datatype='string' name='ORIGIN_AIRPORT' ordinal='10' />
                  <column datatype='string' name='DESTINATION_AIRPORT' ordinal='11' />
                  <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='12' />
                  <column datatype='real' name='DEPARTURE_TIME' ordinal='13' />
                  <column datatype='real' name='DEPARTURE_DELAY' ordinal='14' />
                  <column datatype='real' name='TAXI_OUT' ordinal='15' />
                  <column datatype='real' name='WHEELS_OFF' ordinal='16' />
                  <column datatype='real' name='SCHEDULED_TIME' ordinal='17' />
                  <column datatype='real' name='ELAPSED_TIME' ordinal='18' />
                  <column datatype='real' name='AIR_TIME' ordinal='19' />
                  <column datatype='integer' name='DISTANCE' ordinal='20' />
                  <column datatype='real' name='WHEELS_ON' ordinal='21' />
                  <column datatype='real' name='TAXI_IN' ordinal='22' />
                  <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='23' />
                  <column datatype='real' name='ARRIVAL_TIME' ordinal='24' />
                  <column datatype='real' name='ARRIVAL_DELAY' ordinal='25' />
                  <column datatype='integer' name='DIVERTED' ordinal='26' />
                  <column datatype='integer' name='CANCELLED' ordinal='27' />
                  <column datatype='string' name='CANCELLATION_REASON' ordinal='28' />
                  <column datatype='real' name='AIR_SYSTEM_DELAY' ordinal='29' />
                  <column datatype='real' name='SECURITY_DELAY' ordinal='30' />
                  <column datatype='real' name='AIRLINE_DELAY' ordinal='31' />
                  <column datatype='real' name='LATE_AIRCRAFT_DELAY' ordinal='32' />
                  <column datatype='real' name='WEATHER_DELAY' ordinal='33' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[IATA_CODE]' />
              <expression op='[IATA_CODE (airlines.csv)]' />
            </expression>
            <first-end-point object-id='airports.csv_0627B06A491E4343AF7B4EB809BB4069' />
            <second-end-point object-id='airlines.csv_585A3091A4854F54A15436A52D7682CA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[AIRPORT]' />
              <expression op='[ORIGIN_AIRPORT]' />
            </expression>
            <first-end-point object-id='airports.csv_0627B06A491E4343AF7B4EB809BB4069' />
            <second-end-point object-id='flights.csv_C1FC05B8A55D4F14B2434495EF7A8D67' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='State For Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[Longitude (generated)]' field-type='quantitative' max='-6492820.3318983149' min='-14049432.69698799' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[Latitude (generated)]' field-type='quantitative' max='9443512.5400369167' min='-1298206.2870051023' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]' />
              <size column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:STATE:nk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:COUNTRY:nk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:STATE:nk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:CITY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[Latitude (generated)]</rows>
        <cols>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0A95B34C-385A-450D-BA5F-60C1A8959E71}' />
    </worksheet>
    <worksheet name='air line with most cancel'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column datatype='string' name='[AIRLINE (flights.csv)]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='real' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Air System Delay' datatype='real' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Air Time' datatype='real' name='[AIR_TIME]' role='measure' type='quantitative' />
            <column caption='Arrival Delay' datatype='real' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Arrival Time' datatype='real' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
            <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
            <column caption='Departure Delay' datatype='real' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='real' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
            <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column caption='Elapsed Time' datatype='real' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
            <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
            <column caption='Scheduled Time' datatype='real' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Taxi In' datatype='real' name='[TAXI_IN]' role='measure' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE (flights.csv)]' derivation='None' name='[none:AIRLINE (flights.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[sum:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_TIME]' derivation='Sum' name='[sum:AIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_TIME]' derivation='Sum' name='[sum:ARRIVAL_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_TIME]' derivation='Sum' name='[sum:DEPARTURE_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ELAPSED_TIME]' derivation='Sum' name='[sum:ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_ARRIVAL]' derivation='Sum' name='[sum:SCHEDULED_ARRIVAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_TIME]' derivation='Sum' name='[sum:SCHEDULED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAXI_IN]' derivation='Sum' name='[sum:TAXI_IN:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_SYSTEM_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DIVERTED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ELAPSED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LATITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_ARRIVAL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:TAXI_IN:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</rows>
        <cols>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]</cols>
      </table>
      <simple-id uuid='{1F184372-85F1-4E8B-89E7-B57E5E43952B}' />
    </worksheet>
    <worksheet name='average distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column datatype='string' name='[AIRLINE (flights.csv)]' role='dimension' type='nominal' />
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='real' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Air System Delay' datatype='real' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Air Time' datatype='real' name='[AIR_TIME]' role='measure' type='quantitative' />
            <column caption='Arrival Delay' datatype='real' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Arrival Time' datatype='real' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
            <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
            <column caption='Departure Delay' datatype='real' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='real' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
            <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column caption='Elapsed Time' datatype='real' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
            <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
            <column caption='Scheduled Time' datatype='real' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Taxi In' datatype='real' name='[TAXI_IN]' role='measure' type='quantitative' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Avg' name='[avg:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE (flights.csv)]' derivation='None' name='[none:AIRLINE (flights.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='None' name='[none:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[sum:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_TIME]' derivation='Sum' name='[sum:AIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_TIME]' derivation='Sum' name='[sum:ARRIVAL_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_TIME]' derivation='Sum' name='[sum:DEPARTURE_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ELAPSED_TIME]' derivation='Sum' name='[sum:ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_ARRIVAL]' derivation='Sum' name='[sum:SCHEDULED_ARRIVAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_TIME]' derivation='Sum' name='[sum:SCHEDULED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAXI_IN]' derivation='Sum' name='[sum:TAXI_IN:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_SYSTEM_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DIVERTED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ELAPSED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LATITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_ARRIVAL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:TAXI_IN:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_SYSTEM_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DIVERTED:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ELAPSED_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:F1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LATITUDE:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_ARRIVAL:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:TAXI_IN:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AIRLINE:nk]' />
              <groupfilter function='empty-level' member='[none:AIRLINE:nk]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE_DELAY:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>1455.0</max>
          </filter>
          <slices>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE:nk]</column>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE_DELAY:qk]</column>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f28e2b' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:AIRLINE_DELAY:qk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='618' />
                <format attr='maxwidth' value='618' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</rows>
        <cols>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:AIRLINE_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{41EBF87F-E0EC-4E85-AD01-49DC0C346CD4}' />
    </worksheet>
    <worksheet name='destination and cancel'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
            <column caption='Destination Airport' datatype='string' name='[DESTINATION_AIRPORT]' role='dimension' type='nominal' />
            <column-instance column='[DESTINATION_AIRPORT]' derivation='None' name='[none:DESTINATION_AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' />
              <text column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DESTINATION_AIRPORT:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{77777452-7445-4831-B743-21FB8D671462}' />
    </worksheet>
    <worksheet name='month with most cancel'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
            <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
            <column-instance column='[MONTH]' derivation='None' name='[none:MONTH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:MONTH:qk]' field-type='quantitative' max='17' min='-3' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' field-type='quantitative' max='1399' min='-332' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]</rows>
        <cols>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:MONTH:qk]</cols>
      </table>
      <simple-id uuid='{7763713A-E62D-4692-BF56-3F61E45C642A}' />
    </worksheet>
    <worksheet name='reasons for delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>reasons for delay&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column datatype='string' name='[AIRLINE (flights.csv)]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='real' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Air System Delay' datatype='real' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Air Time' datatype='real' name='[AIR_TIME]' role='measure' type='quantitative' />
            <column caption='Arrival Delay' datatype='real' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Arrival Time' datatype='real' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
            <column caption='Departure Delay' datatype='real' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='real' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
            <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column caption='Elapsed Time' datatype='real' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
            <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
            <column caption='Scheduled Time' datatype='real' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Taxi In' datatype='real' name='[TAXI_IN]' role='measure' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE (flights.csv)]' derivation='None' name='[none:AIRLINE (flights.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[sum:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_TIME]' derivation='Sum' name='[sum:AIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_TIME]' derivation='Sum' name='[sum:ARRIVAL_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_TIME]' derivation='Sum' name='[sum:DEPARTURE_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ELAPSED_TIME]' derivation='Sum' name='[sum:ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_ARRIVAL]' derivation='Sum' name='[sum:SCHEDULED_ARRIVAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_TIME]' derivation='Sum' name='[sum:SCHEDULED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAXI_IN]' derivation='Sum' name='[sum:TAXI_IN:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_SYSTEM_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DIVERTED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ELAPSED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LATITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_ARRIVAL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:TAXI_IN:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='446' />
                <format attr='maxwidth' value='446' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</rows>
        <cols>([federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk] + [federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk])</cols>
      </table>
      <simple-id uuid='{3A6D58DC-3F8B-4778-BA0E-A8E6C73406CB}' />
    </worksheet>
    <worksheet name='reasons for delay (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>reasons for delay&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column datatype='string' name='[AIRLINE (flights.csv)]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='real' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Air System Delay' datatype='real' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Air Time' datatype='real' name='[AIR_TIME]' role='measure' type='quantitative' />
            <column caption='Arrival Delay' datatype='real' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Arrival Time' datatype='real' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
            <column caption='Departure Delay' datatype='real' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='real' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
            <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column caption='Elapsed Time' datatype='real' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
            <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
            <column caption='Scheduled Time' datatype='real' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Taxi In' datatype='real' name='[TAXI_IN]' role='measure' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE (flights.csv)]' derivation='None' name='[none:AIRLINE (flights.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[sum:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_TIME]' derivation='Sum' name='[sum:AIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_TIME]' derivation='Sum' name='[sum:ARRIVAL_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_TIME]' derivation='Sum' name='[sum:DEPARTURE_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ELAPSED_TIME]' derivation='Sum' name='[sum:ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_ARRIVAL]' derivation='Sum' name='[sum:SCHEDULED_ARRIVAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_TIME]' derivation='Sum' name='[sum:SCHEDULED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAXI_IN]' derivation='Sum' name='[sum:TAXI_IN:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_SYSTEM_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DIVERTED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ELAPSED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LATITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_ARRIVAL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:TAXI_IN:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='446' />
                <format attr='maxwidth' value='446' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</rows>
        <cols>([federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk] + [federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk])</cols>
      </table>
      <simple-id uuid='{070E9734-4CBD-4606-A70A-11FE2CC9C1B6}' />
    </worksheet>
    <worksheet name='relation of weather to destiantion arirport'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines' name='federated.1vepcbt0qjm02u1grgfpn18yjso8' />
          </datasources>
          <datasource-dependencies datasource='federated.1vepcbt0qjm02u1grgfpn18yjso8'>
            <column caption='Airline Delay' datatype='real' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Air System Delay' datatype='real' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Air Time' datatype='real' name='[AIR_TIME]' role='measure' type='quantitative' />
            <column caption='Arrival Delay' datatype='real' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Arrival Time' datatype='real' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
            <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
            <column caption='Departure Delay' datatype='real' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='real' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
            <column caption='Destination Airport' datatype='string' name='[DESTINATION_AIRPORT]' role='dimension' type='nominal' />
            <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
            <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column caption='Elapsed Time' datatype='real' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='real' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Origin Airport' datatype='string' name='[ORIGIN_AIRPORT]' role='dimension' type='nominal' />
            <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
            <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
            <column caption='Scheduled Time' datatype='real' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Taxi In' datatype='real' name='[TAXI_IN]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_TIME]' derivation='None' name='[none:AIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DESTINATION_AIRPORT]' derivation='None' name='[none:DESTINATION_AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORIGIN_AIRPORT]' derivation='None' name='[none:ORIGIN_AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[sum:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIR_TIME]' derivation='Sum' name='[sum:AIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_TIME]' derivation='Sum' name='[sum:ARRIVAL_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_TIME]' derivation='Sum' name='[sum:DEPARTURE_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ELAPSED_TIME]' derivation='Sum' name='[sum:ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_ARRIVAL]' derivation='Sum' name='[sum:SCHEDULED_ARRIVAL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCHEDULED_TIME]' derivation='Sum' name='[sum:SCHEDULED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAXI_IN]' derivation='Sum' name='[sum:TAXI_IN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_SYSTEM_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIR_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:AIRLINE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DEPARTURE_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DIVERTED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ELAPSED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LATITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_ARRIVAL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_DEPARTURE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SCHEDULED_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:SECURITY_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:TAXI_IN:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIR_TIME:qk]' included-values='in-range'>
            <min>8.0</min>
            <max>683.0</max>
          </filter>
          <filter class='categorical' column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:ORIGIN_AIRPORT:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ORIGIN_AIRPORT:nk]' />
              <groupfilter function='member' level='[none:ORIGIN_AIRPORT:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIR_TIME:qk]</column>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:ORIGIN_AIRPORT:nk]</column>
            <column>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:WEATHER_DELAY:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]' />
              <size column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:WEATHER_DELAY:qk]' />
              <text column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DESTINATION_AIRPORT:nk]' />
              <lod column='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A68014CE-C868-47F5-A976-4AD49A153B31}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Iformation About Airlines'>
      <style />
      <size maxheight='1080' maxwidth='1920' minheight='1080' minwidth='1920' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='10' param='horz' type-v2='layout-flow' w='99166' x='417' y='741'>
            <zone h='98518' id='8' type-v2='layout-basic' w='90833' x='417' y='741'>
              <zone h='98518' id='3' param='horz' type-v2='layout-flow' w='37292' x='53958' y='741'>
                <zone h='98518' id='4' name='State For Airports' w='37292' x='53958' y='741'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='98518' id='5' param='vert' type-v2='layout-flow' w='53541' x='417' y='741'>
                <zone h='39074' id='7' name='reasons for delay' w='53541' x='417' y='741'>
                  <layout-cache fixed-size-h='414' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='404' h='37407' id='12' is-fixed='true' param='horz' type-v2='layout-flow' w='53541' x='417' y='39815'>
                  <zone h='37407' id='15' name='average distance' w='34739' x='417' y='39815'>
                    <layout-cache fixed-size-h='434' has-max-size-w='true' maxwidth='698' minwidth='698' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='353' h='37407' id='13' is-fixed='true' name='relation of weather to destiantion arirport' w='18802' x='35156' y='39815'>
                    <layout-cache fixed-size-h='396' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98518' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='8333' x='91250' y='741'>
              <zone h='6760' id='11' name='reasons for delay' pane-specification-id='2' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' type-v2='color' w='8333' x='91250' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6760' id='14' name='relation of weather to destiantion arirport' pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]' type-v2='color' w='8333' x='91250' y='7501'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='28' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone fixed-size='280' h='39074' id='7' is-fixed='true' name='reasons for delay' w='53541' x='417' y='741'>
                  <layout-cache fixed-size-h='414' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6760' id='11' name='reasons for delay' pane-specification-id='2' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' type-v2='color' w='8333' x='91250' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98518' id='4' is-fixed='true' name='State For Airports' w='37292' x='53958' y='741'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37407' id='15' is-fixed='true' name='average distance' w='34739' x='417' y='39815'>
                  <layout-cache fixed-size-h='434' has-max-size-w='true' maxwidth='698' minwidth='698' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37407' id='13' is-fixed='true' name='relation of weather to destiantion arirport' w='18802' x='35156' y='39815'>
                  <layout-cache fixed-size-h='396' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6760' id='14' name='relation of weather to destiantion arirport' pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]' type-v2='color' w='8333' x='91250' y='7501'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E81D10E6-C1BB-4EFD-A963-B49528A75C7C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Porblem Face Airline'>
      <style />
      <size maxheight='1080' maxwidth='1920' minheight='1080' minwidth='1920' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='3' param='horz' type-v2='layout-flow' w='56302' x='43281' y='741'>
            <zone h='98518' id='5' param='vert' type-v2='layout-flow' w='56302' x='43281' y='741'>
              <zone h='98518' id='10' name='month with most cancel' w='56302' x='43281' y='741'>
                <layout-cache minheight='213' minwidth='177' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='71481' id='11' param='horz' type-v2='layout-flow' w='42864' x='417' y='27778'>
            <zone fixed-size='724' h='45741' id='15' is-fixed='true' name='destination and cancel' w='42864' x='417' y='27778'>
              <layout-cache fixed-size-h='486' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='27037' id='12' param='vert' type-v2='layout-flow' w='42864' x='417' y='741'>
            <zone h='27037' id='13' name='air line with most cancel' w='42864' x='417' y='741'>
              <layout-cache fixed-size-h='413' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='26' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone fixed-size='280' h='27037' id='13' is-fixed='true' name='air line with most cancel' w='42864' x='417' y='741'>
                  <layout-cache fixed-size-h='413' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98518' id='10' is-fixed='true' name='month with most cancel' w='56302' x='43281' y='741'>
                  <layout-cache minheight='213' minwidth='177' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45741' id='15' is-fixed='true' name='destination and cancel' w='42864' x='417' y='27778'>
                  <layout-cache fixed-size-h='486' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4886A038-402E-4D95-AD53-1A6725536A61}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='State For Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:STATE:nk]' type='size' />
            <card pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[avg:LONGITUDE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:CITY:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:COUNTRY:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1171F5F0-2044-41A8-8E3D-D3D92C5C0AF1}' />
    </window>
    <window class='worksheet' name='average distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE_DELAY:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:Calculation_89509094001364994:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:Calculation_89509094002184198:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:Calculation_89509094004084751:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:Calculation_89509094004224020:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[usr:Calculation_89509094002806797:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B80B2B0A-0800-46BB-84D0-DF2A6A83BF26}' />
    </window>
    <window class='worksheet' name='reasons for delay (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[Multiple Values]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:WEATHER_DELAY:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50425388-3F36-48B4-991F-57629427634B}' />
    </window>
    <window class='worksheet' name='relation of weather to destiantion arirport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIR_TIME:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DAY_OF_WEEK:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DESTINATION_AIRPORT:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:ORIGIN_AIRPORT:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:DISTANCE:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD892679-B37D-444C-AA8C-F66814C9E303}' />
    </window>
    <window class='dashboard' name='Iformation About Airlines'>
      <viewpoints>
        <viewpoint name='State For Airports'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='average distance' />
        <viewpoint name='reasons for delay' />
        <viewpoint name='relation of weather to destiantion arirport' />
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{700978FA-E5CC-4D94-B4DC-4A76A55F7E95}' />
    </window>
    <window class='worksheet' name='air line with most cancel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:CANCELLATION_REASON:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DAY:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DAY_OF_WEEK:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DESTINATION_AIRPORT:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:FLIGHT_NUMBER:ok]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:ORIGIN_AIRPORT:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:TAIL_NUMBER:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:YEAR:qk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F783F658-E716-4F6B-8B17-CF74BC133DAE}' />
    </window>
    <window class='worksheet' name='month with most cancel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:MONTH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{276A3670-E515-4350-8E78-ED651C49BFCF}' />
    </window>
    <window class='worksheet' name='destination and cancel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:CANCELLED:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:DESTINATION_AIRPORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BF0C77D-E9AA-4F3B-A86F-6E397F4E3715}' />
    </window>
    <window class='worksheet' name='reasons for delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vepcbt0qjm02u1grgfpn18yjso8].[sum:ARRIVAL_TIME:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[:Measure Names]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[Multiple Values]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE (flights.csv):nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:AIRLINE:nk]</field>
            <field>[federated.1vepcbt0qjm02u1grgfpn18yjso8].[none:WEATHER_DELAY:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF59DB79-705F-4BDB-A1F8-0CD1F4A87C57}' />
    </window>
    <window class='dashboard' maximized='true' name='Porblem Face Airline'>
      <viewpoints>
        <viewpoint name='air line with most cancel' />
        <viewpoint name='destination and cancel' />
        <viewpoint name='month with most cancel'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{878819A7-9D0D-4985-A17A-D66640BC1E34}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Iformation About Airlines' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Porblem Face Airline' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2XMjyZ3fP7jvi+AFXs2b7Gv67p6ekWZXI8seWSFZvhR2OMIRfrDDD/vo
      N7/ZYUf4H1j7QXaEY7X22usNh2TNxEqr0axWGs3RdzebzRu8QRD3faP8wKN5ACQIFkCQyM8L
      UVlZv0oU64vMX+YvMxWSJEkIBE2K8qwLIBCcJUIAgqZGCEDQ1AgBCJoaIQBBU3OkADweT8n0
      mZlZyKdY94WqvvGGx0Nxb0I+zuzCetX2asnszMxZF0FQI6qqAWZnZ2UrwMcff7L1IR9n1l1a
      cCfhk48/PrWNg8j5fQWNhXrvQci3ztziGsvL6/zgH/49nj57yvccd/gv/+1jMFv41//8R3uu
      zPD860k8+hBhczf45ui58xHB2a9Q6q2E41n+zoffoJgO8P8+e82DAT1//tjDH/3oD/jkrycg
      H+E71m+w6Hbz5MkTrox1s+Ke5cnXWUJpJX/rgwdAmB//55/zzo1OFtayDPZoyan7sOAnXlAR
      8Pn5zt/9Nh//n5/TN9jH0Mgo7sUte6NXbmAxqHn0+Wfk1WbaO7rQSUk8gTAbvijffzjIH//s
      BffH2onmtQw61bh9SRyOFqzKFKvhDKHNTT76wQ/q/C8R1JN9NUA4FKRQlIh5vCT2pOsdXftf
      /gMmrt64xZ2rg/hDCaZn5lCrVETCwa2zeifKfIQZb4prLjNvnj9j7PYdALQmG/0DA9y5cweD
      GnoHRrhz/yGZWGDXelffAPffu4vVaOP+w7tENn2s+EK89+4DHoy28GoxisVioFBUYDRbGejf
      smcxbGl7M5zk4YN7DPV3EwgEAAUb3g0ALg2NcvfBe6QiXl7Pr/Gtb77HzWvjvHg9hUmnwaTK
      sBZMy/OkBQ3JPgFMTs1x8+YNNAcaRu3t7RUbtNkcXLl+gwd3bu6mmdUK4nm4MeDgp489DLUa
      ds+pKJDO5iicYDzaqIJANMkbt4/BVj0jN+5xucfA75/OoVNBPJ2lsG1QTZ54OkswFGJhZZ3r
      48NQYvC7025gcSNEMBik02mjpXuIW/fepc2sqbxggvOHtIdsKi49f/5K8nl9Uk6SJL/fL0mF
      jOQPRvdm20qXcpLfH5aiQb+UKUhSLhmVwvGMlM8kpWdPn0i+UGw3fzIalDz+sCRJOWlxcWWP
      DUnKpRPSs+cvpVzu7X12zu3c49DfYkGamnghbW7nX19ekCam5qSiJEmFXFp68ey5lMoVJEmS
      pGIhK718/kwKRhJSNOCVJqbmJJ/fL0m5pOQPx/fdzz0zKS2teSVJKkpzUxPS3NLagfIILhoK
      SRKxQILmRYwDCJoaIQBBUyMEIGhqhAAETY0QgKCpEQIQNDVCAIKmpqYCKBaLx2c6Q3vNbPM8
      lLEeNmURQDYVI57KAhAMBnfT5R5jO48PuFFtnocy1sOm+oh8FbOy7gUUmPu7ePl8god/+AE6
      JfzbH/+aN0uBY68X1I+f/sd/ctZFaChkEYBvY52sQodeSmNzmplf9HBl0CWHaYGgppw6Fkgq
      pAhGi+hIE81DV5uTQCCA0+lkbjVAKluQq6wUiwWUSpVs9prR5vXBrcjefD6PWi3L798u59Fm
      TYPhCoUCKpV8L8J5fMCNavM8lLEeNmXqBSoQDEYAiWX3/K5DLBA0OrJIK7S+wlwgw3jaT1rr
      QMlWs8ftCe9rArU7THQ4THLcUiCQBVlqgBWvj2J4g6KzH0sxwvKaVw6zAkHNkaUG6O4bxOmw
      sL7mIZrI4OzoAmDAZZfVBxAI5EYWATidTgC6envoksOgQFAnZGkC+b3rzLtXkIBNzyrRhFhJ
      QXA+kKUGiKdzONQpZmYXCMXijFu2aoRfP3Xjj8onhmKxiFIpb/jSUTavDbTv9psLLiayvE2J
      aJBAIkc+GqFnaJSN1WU5zAoENUeWGsBusxONpxi4Ps7q/CzOjh4APrw90JQDYYLzgxgJblKb
      56GM9bApSxMoGQszu7BIUYJkMimHSYGgLsgTDr3hY+hSz9a6oIoiI6OjQOM7wR/eHsBp0clm
      T3D+kO1tUmsNaFRikTnB+UIWH8C/6SEQitLV249/zY3W4qS7s034AA1s8zyUsR42hRPcpDbP
      QxnrYVMWy2vLbuKpIo5WO+3OtxNixJRIQSPyF//uH+1+lsUHCEfCoFQgJcKE4lFCMTEfQHA+
      kEUAJmsLYyODdPT28fyLR/T0ivnAgvOBLE0gs17D9PQ8w2ND3Lx7G/12s3/A5UAl49xYSZJQ
      KBSy2Wtmm+ehjLWyuRfhBDepzfNQxnrYlGdhrJifV5PThEJB3kxOEoqJcGjB+UAWaWXjAeJZ
      8K556BkZZWl2Fse1K4dGgkV4saDRkK1u6R8eo12XYX5+Bkm9tQuk3NGgAoHcyCIAQ0svGjUo
      UKLWmhga6JfDrEBQc2QRgEpnZOt3XsPgYL8cJgWCuiCDE5wl4I9t78IO8/PzpzcpENQJWQQw
      8WKCl5NTFFIhgv4Q4czW8tO/furm0yfu099CIKgRMowDxJmdjiEpY2gKOVKApDBxdaxfjAM0
      sM3zUMZ62JTBsoHuXg1gA8BoNIpZYYJzgwwCUGE07v+VNxqNpzcrENSBUwqgwPz8CkNDfUzP
      zNPeYmXDF6BvcAyTTsWPP37GsjcqT0k5P7Em58HmeShjOZv/4V9+KJv9UwtgdWmNVqsafzyH
      VAxxeXyM6ZkFxsZGcHtCYj6AoKE5pRNcJBGJUdBoUbNlZscHMBqN5HI5WSex13tluIts8zyU
      sR42axoNKv5pjWvzPJSxHjZrKgCBoNGp7ZqAxRwTE2+wtLRxqae6WWKZZIyJ6UXu3BjftZVP
      hsmi5fLoUFU2A951NrybODu78G16cXX3sbGydKpyrizOE0rkaLMZ8AVjXOrtZHnNg6tnkFZ7
      dbvi+NZXiORAkYmTRYvdqMYXjHH52jU0VfwoJgPrzHhjDPR2seJ2y/Is/d41AuEUrg47S6se
      WZ7l4vw03lCSvs4WWZ6llEvwYtKNxWaD7P5nWdOd4nPhday9V8hnqx8X0BktWI36/bbUWrSn
      kG5LWxtKpYpAOMb1a9fxLzw9dTktZhOpVJpkNs+VXitPF/xcv3adSHCjKnvFXJJIVoG05/vu
      2F4P56qymZdUaBUFIusLsj3L1bV1Ctk4c+tB2Z5l/8AgLXa7bM8SBaRTadLpzKFnWVMBqC1O
      vPMT5ArVd40lY2FWVlcI5TS7tlKxCJFYqmqbL588RlJrsRnUvJp4hbF98NTlDEeiFIsFFIUc
      E/NeBtuNvJp4hdZgq8pePlegkEmw4Qvtft8d205LdW+sUq1GAeQ0RtmepdViBqmIQa2S7Vmu
      Li7S3d8v27PMJaIo9UbyhfyhZyl8AEFTU9MaQCBodIQABE2NEICgqRECaHC++t1f8+rN3LH5
      vvzyC7748st9acGlV0x74rUq2oVA7A3U0MQIRJQ8+MYwTz7/Fb9+6mak20ExmcTeP4BOayG4
      MoEnoaO71QiSgl/89M94PrnG3Xdvkg2u0n6796y/REMjaoCGxoSU8/HqzRxLq1662uxodEYu
      uVrJFkChUKDSmvjGu3d3r1BpDHz4nQ9RFnJi77MKEN2ggqZG1ACCpkYIQNDUCAEImhohAEFT
      IwQgaGqEAARNjRCAoKkpKYDQ+gK+eL4iA6lYiNAJ4slDvnVSlZmuiJmZWfmM1cCeoLEpKYCw
      x32sAD7++JPK7xJ28/HnkycqWKXMzsr7wsptT9DY7BsrX5x6zrw3QcazSH/3+/zus1+iNdmI
      por025QsJSScNju9rWYW3W5evJ7mkjHOZKqb0NTP6e4fYm5qmo9+9E/ZmH1FOJYkmpYYsWdw
      zwaY67YSmX9J9/tdPPvdX6Ey2vGHY3zv/gB//LMX3B9rJ5rX8uH7d4EcT79+RiYTQeccwzP3
      iK7eARan3/DBD/8ZE7/9BL29HV/w7cJbn3/2S9RmBx1dl5CSAQLhGL5omoeDJn72IsxYO+S1
      PTjVUXzJPI6WdpSpAOGMxOZmkB/84Lt1fvyCs2ZfDfB6bo1v/8H7XB7pB2BmdhaVSk04FMRi
      tyPlsmg0OpydPfQPDHDj6thbQzojt27fZrDDRiIvEfD7UShVbKyv0tfXx8DIOMP9Pbv5Q4kc
      D+7fo0VKEyzApaFR7j54j1TEC0A+nSIcS6I1allxr4Baz61btxnrtRNNp4hndTy4d5e2Fuuu
      zXAyx4N79+jvbicQ8INCiXdjHYCh0as8eO8OEa+f+bVNvvneQ66ND/F6agqdRo0qEyEotjZr
      OvYJwKaDtUCMzc1NAOx2J1ffucm9W9dRaI08fPiQ+TfPKQCFfJ58oVDGbJZ1f5Lh/u6t5bIM
      VgqxIIW9+fMZkpksvlQOW4kFpCOrM6jaBmnf84K/RUcqGSSbTRMIRvbYzJHO5giFIqys+xkf
      7qdUpJPdoGYjFCcYDOK02egeGufeuw8xa456VIKLyP5gOKnI9ORrLPYWbG0udFKaickp+obG
      cZg0TL5+TUtXP65WO9GAl7VgkpGeVhJFHfl0DKfTSSwUQGdzEt5YJpZTYTfrcTqdeFbc5FQm
      HAYVOpsTdTHDxOs3DIxewaIpEEgUcdpMBAIBnE4nAAvTrzG3uVBJKiCP0+kkEQmgNDlRpCNM
      L67h6uygvXUrfzGX5tXrKQZGL5OPB/DFcrTazdiMWhJFHTaTkkAggdNpZfbNBCZnD11tNqYn
      JzA4Ounrat93f8HFR0SDCpoaMQ4gaGqEAARNjRCAoKk5NGduatFLLHk++wO7e1tJ5cv1TNUG
      g1pFtliU3WZapu9hUKvIlO2tqwydWkW2Shs6VXXPR6c62T27zOYT3wNKCOA//clf8fjNclXG
      zpo/+jc/ZCEcq+s9B+0WNlPVLy1Y2qaZ5ag8qzkM2i2sxE5n65LVwlq8Ohs9FjObqZOvE9pj
      MbORSFSc/1+9886J7wGiCSRocsoKQKPVcWOoAwVwZbiXnhYTNpuVm8OdDa+ayJqbzeVVIM/a
      86f41zzE/JtAnky8ds07z5uXhANhADbn3pBKZkgEvORO0QJJRqNsTE+w7l4mk0ySjsUoVtFx
      HVxZYGlyhuT2L3nU7ycdj+8eV0Iq5COVzpOLh4hFkiy/fEI0HCcVjyPlUkTDCdJH1Darr18Q
      9IcJLC8w8/gxG0trFIGI308mFqf0Y5JYnZwgGYuSzhbxLy8w/egRoUCkZO6TUvZdfu9aH7Oe
      OO9edmHRKenvaWe8x8HkaoSHV3rKXdYQRCJxzIYi3qU5NKYeWrtd+CafEgn58M9t1uy+6YKC
      xPIUy5Ov0Dr7UKsgtLKAd6H6JuXK9DSZjETXQB/BZTdrM3Moq1h4OZXOY9fGWX0zg39zndmX
      C2wuuvG4Fyq2EfD78C3M41l2E1hcpqiQ2JyawONewL+8gn99Fe9S+Y3RkwWILb7B4BpEo1Zj
      U8fxejZ483gSz6K75Mu4/PIJtr4hpNAim6EsrX1b1zqc1a0UfZCyAsjnclv7/aq19PV149Bt
      pWfTKXJSo9cBYHA4KWSSbM68IrjuxewaJO6p/J9dLSargUQ8i8lmRKMu4F3xEVpbrNqeUqUk
      vOZmY2mVqGcJtNVtQZvwbxCMZnD09rH4xXNcPTYKJ956aGtEXql6e53RaMTZomc1kEWnLqBQ
      Hh1PYrEZyG4HGhu6h1j98it6BjrIoqSUrrNZBSaTAY2uNnEqZVdOmvfGeO96P69nlljeCKPW
      aFArldy/eomZhdWaFEYudGoFq2/cdF27QibwnKJUxNTiRIGBTK5UbJFMpGMk9S7Gb7tYfPYY
      i93OlY++Tzbkrcrc2sQTOgbGKXb3YO/owGQyIOVS5IsS6hNWAxank0QkgcXhoHNskM6eNjYC
      OfTaym1YW5yopDR5lQ0pk2HT7UHrGsbW7aIt5sZiViGZu8sbSMeJ67voM4DU2Qmo6Rwfpbu/
      k9W10k2ngWsjzDx6RGdvB2H3C5zmWzg6O0/03Y/iUCjEv/j3PxG9QCdA9AIdjegFEggaGCEA
      QVMjBCBoaoQABE2NEICgqRECEDQ1QgCCpkYIQNDUCAEImhohAEFTIwQgaGou1DaCLrPpTO4p
      dyyQoH5cKAFsxBO46xwMV0VovqCBEE0gQVMjBCBoai5UE2iHrH+RqUkvw1f7ePPb39N//x6Z
      YIqua2PHX1wFl6zVLclRjnZjdbO+StFmNMhiQ1FlW6/NYECtOvnFTr2+Ls3LCymA1Vk3xVAY
      jf0BHcNjOLvaWQ8u1ex+aSlzahsuk4lEYWvCfiAXRXXEDMB2g7HySSbKPAp1rqKsbQYjvhJ2
      NzORfW2F9jL5StnazGSPz5c+bGs9ldmXJ5iuTUfDhWwCWTr7uPHdbxHZCKAzmQAlMe8S0ZA8
      KwkILg4XsgZoGxgCoLUbYGup87Fv/+2zK5CgYbmQNcBZ8dmf/28kKc+v/vtP8Ey9YvrRY7xz
      M7z6/de8+uJxxXZ+83//gief/pZcET7705+QKcDsVy9K5v3l//xfSFKej//rnzD5fCvPb//s
      T0lka7/q/euvv+D1V4+Y/OIZWWD6+bOa31NuhABkpKfbwfTXL3AOjxNPFhi7d5doPMnV9+5j
      1Ffu0rUNDDM6YGZ9YZqi1sT0i7myeft6HUx++Zy20csA5MJLZJQGZp7WZlPCUihPvLxK43B+
      S96AWHvHKBbSdLTbaG23MfXoEe2udiZ//zWSpvKeooTPw1JQhbKo5MN//PdxWCAV87G6tHYo
      r61vnEIhTVeHDaPZxOZmlg9/9A9odZ5gvZMqMTnauPrgHjarmqmvnqBUKnj9+CXyLhVcWy6k
      D3BWdPT20dHbt3vs6BkAwNbRdSI7977z0b7j3pFhekeGS+Z19fXh6us7lN47MnKie1ZD/3aZ
      XJev4qr53WqDqAEETY0QgKCpEQIQNDVCAIKmRghA0NQIAQiaGiEAQVMjxgEaiA5jZVM6TRoN
      iu34ZK1SSe6IXRjtOj2qMnsJaA5ca9JoUG7bPXjuoE1lifjovddUasum06MsUb59ttQa1Nu2
      1EoV+aJ8O4FeKAF0WUx1n6PYZTahVOdPbadFb2A9Ga4ob2hP9HW7wUQkVz5UWKNSEMmWPt+q
      NxLdc+3ez84D5w7ZLHFu7zUnsRUtUT6n3ribvve8U28kXOb7VMOFEsD6GcwJBlBrTi8Awdlw
      SADX7oyi7W49i7IIBHXnkABmNoI8XaxuT6uz5s6trZiYtVePyafT2Icu45+dQ2OyYDapiUVi
      dF65hU5bG9//6ae/QGtuw9Fio3tkiLWZlxSwoJBy9IyNihUkGpAL1QTaIZtKkU+mCM4s0XX/
      Ab43L1AoNBRyxZIOl1yk4gnQWAmuLhILBykqQJf3oWi9Kl7+BqXsT+HtoR7eHemhRavnuzcv
      0dfmZNih41uXezHZbHQbGvtfqjXp0NlMrHz9FZlYGqVGjUpKEA5WvvHaSXH2D3H7g4cY7G2M
      37uHTpklr2snG1qh9tNTBNVQvgYo5vly3sud/h6sejW5dILW1lY0eg33WnX8dr5x/6UD979Z
      Mt3WPVDT+47fuAHA8K2tHQuHbr9f0/sJTk/ZGsBiMnJ/uBtfMIp7I4Anlqaz1cqjiRW6nJYy
      29oLBOeLsjXAbybe7qq+HN36+8mjNwD8j6/na1uqJqVVf/L1gDTneDpiI3AhneDzir/E+jjH
      0W6o/4LAFwnx8yFoakQNcM4xqDU4FeWbTjatruw5q1ZXNnTEetx1ZdJLmavW1knLVQ1CAOec
      TCFXNtYH2D3n1BsJZvY3sSK5FE7d4XQAlaJ0DFGLzshK/HDMUqn0lm3be2N3Wg7cb+dcqfSD
      aTvppb5LtQgByIDLdPrFcVv0etaSp19jVHAyhABkwJs8/eBaYw8rXlyEEyxoakQNICMvf/Mp
      BbWZ9hYtans/+YSXTlcLL154uP3ejWOvr24cQFVNUQXbCAHISDqZpKhSUmi1kt5cRiLL6lwW
      q0lJkeOr20AVjl2HSowDnIYLJYBui6nkVL1a4jIb8WWiu8eKQpEC0NXdxqOvXmEzKNBqVaws
      +rnUL/88C4NKg0InPIhquVAC2EykWInG63pPlUKBYvsp3v/u9/ed++B7J1sTtBpShRyhzPFT
      BJ1VNK+agQslAEF5bFod5aZCOPVGLBodsdz+btgBi4PogTSrRndovzCrRkc0l9knspOm7ZTD
      qtETzaX3le1gmlWjr+xLV8CFFEAmFkdnMRPd3MTa3k46EUdVBKXFTLO6jLFc5tjBo1CJ8/VJ
      Sx15XGmeariQ3aC+OTdSNsLc188oSOBbnCc65+bo7doEzciFFADAxuQbTHYlawsegktzrM0t
      HH+RoOm4kE0ga2c7khJcHR1EvF5sd99HU1A0/JcV4wD1p9Hfiaqwujp2P9s6Oo7IKQ+dFa7o
      dhQtej3rqZNv43rJYqNFd7xwLJqjoyibdWLNhRRAvfGmZJhoX2VXfqXdoColRzrBlYjoIiIE
      IAC2BtQ4IIKdNI1SSX57nU69SoNiO596O92g1qDAuHsMWzXOXk2rlUo0StWx+Swa/e7xzjqg
      W/b3H2tkWiNUCEAAlK5JQuzE6hv2nHubx6EzEM6mdmP6d44BFAr2zQNw6Az4t6Nmj8q397ic
      /XA2tc/GaWjOhl9NkJj4zacsTM0z+2Jrw+hnf/mXzE1MnXG5BEchagDZSKMzuxgcH9oVAICi
      QXppjneCG6Oc9UYIQDYMKKQY7ql5Cqk4i7Nu9CYDkoxr2Z+G40aChRO8zZX+DjRGeSceNwvD
      dx9sfxra+jNyspXoqhkHsGr1KGSYT7bl8JY+Z9HqS/ZSWTR6WdfqPwsOCWCtUGC+cD7Xu79z
      1gU4JdWsC6RUVhYX02Y4WlxHdacqFOXv4dAZdj9b9gSpWQ4ErJU7V2m+485Vi2gCCU7FUUFq
      lZ6Tw0a1lBVALplAYzRRTMeJrq1jGxwhG/KjbWlr2Ancneb6t2M7zUY2Mycfwa03p3GCy/3a
      WjR6wjJFZZ4VZQUQW1uiZeQKwZkpWsavUsxLJFYnyWSuY3W11LOMFeNNpFiq84QYxZ4JMY3M
      aZzgWC4tW/hxo3Hsv06p1RGf/oKic4xEqIgmP9+wAhBUz1FO8EWmrADUagWRpSUMdiupYB6t
      Uk33B98iE/TVs3xVkU7E0ZvMSLkUsXgOrRr0FiupWAyDxSL7/Vym0wfDOXTVLYwl15zgo5zg
      Fr2hZPpFoKwArAOXdz8bOi+9/exsq22JZGBj0U3/1etszs+TyivodDmY/vw5nVfuUIt/pRwL
      Y0F13aAFqVhyltUh28f0Ah3FUT7AwTiecteIXqAzILi+QiqRp3vkD0lHY+hMjf1LVk03aIex
      shf7NE7wUT5AuESvjENnYDke2k136AysJLaOHdrDnx1aA6Gd2CDexgLt/Xwwbzib2nddtVxI
      AejVsDY7T9e125jNajzLIa5/9BGRDR/6PXMF5ObJr36BxtxKi9NOz8gQa3NT5NFwaXioZves
      FDESXJoLKYDOsev7jntGnAA4avjyAyTjcYwaC8GVRWKhrV0ilRptTe8pF1u+xFmXov5cSAGc
      Fa39w1y+eYOZpy8YvX2DueeP8CzOsdHWRWd3Y/tO6SOc4D6Lo2T6QR9gb/rB40YNmRACkJHL
      N7fW/xy9vb1b5M17DN+8V9N71mNluEp9gL0czO/QbvlferUGB1uTW9RKJW17/uaLBcx7xLPz
      uZK81SIEcM6pdErkgLX0r/gO6hqHQ+86q3ucWl86vu/vTp69jm1o29mtJG81CAE0Ccc5wd1G
      277Atkqp5ppGQgiggaimr16uiSzV+gAre7o7d/ObHYfyNWr8mBBAAxGoapvU2ndfnjQWqFT+
      g05wr2lLJDvt+IN/jzpXKm+1CAHIgBzrAjnO6R5h1TaB4rn0oXZ8OR+gkr/VIgQgA9WM4B6k
      1vsaHDcSXK0TXKpmEE0gQd3YWjPn+NcrlsscGTN0lBN80vkAlTSBdrpFz5pDArjWbsOiO58r
      BHSaDXX/pekwGwjlcgD4PR5aXS58q2vYWywszq1xacjF/OQCA+/cQF+D55rKV9YNepyDfWR3
      aoVTIk/C3vZ7r8lBPJfeFcXOMUCf6W1tYtHoDwXEWTR6Ynv2DjgphwTgiSdxh2NVGzxL+hxG
      lqJ1LrsCtNvRDq8//z3v//Ajnv7N17i6Wxi6dZPg/ALtV9/B/eIll+/fqm/Z6kApYZQSxcFf
      /L0+ABxuyx88PliD7D0+zSizaALJSM9QJ49/+RVdI/1cvXWFqd/9BkltIv70GUNjw8deX802
      RpV2g1pr5AOUolQoxE4E6A69e37ZD/bm1HpQbt+9yp0ILbwhnShg7mzHZFITiRbRqCQy4Q0y
      GQWdV6+V3XLnrAkszhKNZbHb9YT9YbpGR1mbmsLWPYCzU/6N6nZo6R1DYwxislrwr6yAoYWe
      vm40bS6MFfzU1LIbNFojH6DUK1BJt+lRNYDLaKXP5CCWS+82cXYEs5O2k37aeQFl/y3JcBCl
      3kEm6Ccb1yFJRfL5HEUJrKYCqTQ0anh91LuBuWeUiHceFEbWZ2bov32PlefPaioAR2srjta3
      9ttPtizQmVKtD1DKCa6kCVSqv3+HfLFIupjbbdqUa+6UOn9SygpA7+jAOTBMIbqC+7UfR7sG
      VGYym3NEkzDUL1H1mt41pvPyDdZfvkDhsDJ49QYbr5+QTKTI5c/nekdHYVBrUNR5a9jjqKQJ
      BKX7+2GrBjCoNPtsVTqj7KSUFYBWp8bzaoKO61fpGjOi0ShAb8fqakWj05BJptE3aBWQS4Sx
      XBrC2mIFoPPqbTamXtNz/eYZl0x+UvlcRYNB1Uy33KEWTaCjSOdzbGSj+9JWEiHsWkP9agBL
      Vz+W7W1ujS3Otyc0ZgD0DbxBudXVh3VfioLO8Ws1u1+HDCPBdp2eeKL67rzjOM4JPmqgLJ5L
      l2zqKKi+F+ioJpBc830rQfQCycBm6vQjwbXmOCe43MsM8qwKUaqWKtcE0qs1uxmK+ZgAAAC8
      SURBVJ8tGj2pQg6X0UquWMRltKJWqHbT1IrT9RgJATQQtewGrSeVzAg7zgneyW/R6Ld2hVFp
      8KSj2LUGYMtB3vu5WoQAZGRxbo7+4WFWXn2F2nmZXNBNLFFk7MGtih50Nd2glW6SdxqO8gFK
      UcoHOMlAmMto3X65t2zVcjqlEICMJONb6wOliwYUPjc6DRQkCWUNO8wqdYIHy8T073DU4NNR
      Tm2lPsDBMh41EKZRqEizFV5SrhdIrnGA/w+wc9K/qHDEFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State For Airports' width='192'>
      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
      nv0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='air line with most cancel' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZZ0lEQVR4nO3dx3McZ5rn8W+asigD7wkQBOgAWpGUKFEa+VZru6Vp7cTMdu/GTOxEzGVj
      r3vbi/6Mucxh97IdsTPdEzItT+8JWgAECEOChDdVBVQVyqaZQ4EgKYLoFgUwX1S9nwgdAFah
      HlXWr/J983kzU7Ft20aSSpTqdAGS5CQZAKmkyQBIJU0GQCppMgBSSZMBkEqaDIBU0mQApJIm
      AyCVNBkAqaTJAEglTQZAKmkyAFJJ27QBsCzL6RJWmKbpdAlAoQ5RFvdaliVMLWttn00bAMMw
      nC5hhSi1iBJEKLwnogRgre2zaQMgSetBd7qAFfk5/vX/nea1v/mIxjJ34XdmktNfnyTUeYQD
      bXVPPDyWSLOYSjhQ6NPy+Rwul9vpMsjn8+i6jqIoTpdC3sija4LUssb2ESQANpHB25S3VDEw
      EqFhXwMKkJqfJu3xkxkbx2qre2J3dfzaKL8/0e9UwVKREGIIZNs2fWMpXn7tJeypO2SMwthx
      anqalh1dVBlRZlLiTHql4iFGAMwFohkNciouO0FkKQt2ionxRcoCZZRX6oyOzjldplSEBBgC
      2cSHbxLLW1y6cAEjucjAgxjVtXEmljJkr17AyqZY9NznaGcdzo8opWLieABsy+DGUJK//s8f
      UakBRpRvvu1hIAX7jr5NV0slWBnOf3OC2SzUeQrP69xaw+/e1Ryt/SHDNNA1x99KTNNE1VQU
      Ab4mTNNEVVUhJsFrbR/F6cui2LaNbdsoqrq82Wwsq1CSoijLb6CNbdmgqDx8P3O5HG6380de
      ALLZLB6Px+kyyOVyuFwuIT50uVwOXddRVedH2WttH8e/th59yFd+g6r+eAMqKE/9TpJ+Pufj
      KUkOkgGQSprjQ6DHJaNTLOR9NNaVowJmLsX4gzFShkJ1QzM1Yb/TJUpFRqg9wM1rl7h88RLp
      vA0Y9F48w9hiFjufYvDuuNPlSUVInD2AMU/CrGNrVYpIMk1ZhcLiYobGXW1sqwmg/ujIxuJS
      lqVI6rleqrE6iNslxiFUyVmCBMAmOtRHsP0gO1wjXHkQYUvFFva9tJvzF76j1xXmpSMvs6Um
      uHKE+0LfGF9cGHmuV/v0H9+isTq4fuVLm5bjfQAA27Y486//wqhSRVBJM5+u5He//SVlGihA
      fG6E706N8Mu//YCy5efIPsDTZB9gdUL3AQBsM86it4P/9uu30BSF62e+ZX4xwvjELDVbW3Gr
      LlRNEWvCIhUFIQJAOs3Ogy+tjPM7dnUSV7wEKnRuXjyN6Qrx2ntv4nO4TKn4CDEEeh5yCPQ0
      OQRa3Vrbx/nqJMlBMgBSSZMBkEqaGJNg2+L8N//GdFpHRSHc2MFrh7pQslGuXbrCdDxLbccB
      XtvT6nSlUpERIwBAzlvNx++/haYYnPjmT8SSHcTu3KRs22E+bqkgk33y2i7ziyliyQWHqn1S
      Pp/H5XI5XQaGYaDpugCnwyzXoukIMB9fc/sIEwArk2Rs7AHGUoScu4aAP0fP6Dxm4iojN3M0
      7djPod0tK2O2Uzfuy6tCSD+bOAHIp5mfnwfLwO1SsCwDw/aw95W3aPBkOf3NKea2taycEhnw
      uWmsCjhb9DLbtoU49GjbgIIQewCxann29hEmAHqwhoMHX0JTbW6cPU4koVFZBamlPEqZh6DX
      hfHYlVE+eLmdj17f7VzBj5F9gNVr2Qx9AGECYMbG+Oyzf0exTWx/PR+EAtQc2Mvx01/TpyiE
      t+zhJdkKltaZ7ASvA7kHWL2WzbAHcL46SXKQDIBU0mQApJImzCSYdJTuvhFsVKqb2mitr0RV
      TOYnZyira8Qnz2CUNoA4e4DYPfrnFRrqKpnsucjV4WlsDAZv3mAx73RxUrESZw8ABCtqad7S
      QmNdBcd/uEpi6+vPfOzJ66N8f+3+C6zu2cRphIlRBzhXSzjg5X///Rt/8eOFCsBDqruccn+W
      TO7Zj4nE09wZi7y4oqRNoSr005pFQgbANhLEUy48a6wve7WrmbbGqhdX1BpEWQyXNwx0XRPi
      6tCFxXDaC98L/NTL3QgVgMxSnGhkjtG+a5S17SHkBsvMsxiL4vaqBIIh3Hph2tJYHWSrIAGQ
      jbDVaxGlEbYWcaoLt9CkR+npu0No22GO7GxCQWfLti1MD/bQe3uAxbQ4twGVioNcCrEO5B5g
      9VpE2QPIpRCS9AwyAFJJE2oS/FN8fn6QP5wZdLqMZctnfzhOlDpgs9QiRgBsi1Nf/J6I4UMB
      qrd00RpMsuBuZl9bLVhZrp05T/PRt6ldHsrl8ibJ9BqNAkn6C4gRAMAONvDxG2+ha4Wk5mP3
      uH1riq62WsxkjFnTy37n55lSkREmAGYqxsBAP5qqEKhsoKm2kXBukPmlPajRKcLVzcj1cNJ6
      E2gSrKzcV1ZRFFA8NNQHmZ6eZerBHI2tDU4XKBUhYfYAmr+cHTt2rgyBAOrq67lzox9bC9MZ
      FqZUqYgI86lSk1OFk+IpTIKPHt6Br6oed/wK+u4OcQqVisqm7QT/4WQvfzw75HQZANjYQixA
      E6UO2Dy1bNoAyKUQT5NLIVYnl0JI0jPIAEglTai5ZX/3KaYTFqCz/cBh6jxZ+nr6SOth9u3r
      oszl/K5dKi5C7QHuPpiic+9BDh7cR02ZxaXT53DXb6PeneD7czfYlJMVSWhC7QFUl5dweTle
      HUhPkXTVc7SlAc0oY+jLCySA0PJjJ+YTTEWf707xBzrq8XudP4VRcp5QAUhOD/PFZ39EU/wc
      eedlKpjh0tWbhD1ZopEE2ccee28qxulb48/1Oh1NlTIAEiBYAAL1Hbz94W8KewCg7tgbTE7O
      YJg6/qrylbvEA7y+t4V3DnU4UqdUPISaA/zY3NQEhqITn5+jpmM7fqcLkoqOUAE4cOgIrscq
      CgQDJGIRfHXbOdwpb5AnrT/ZCV4HshO8ei2yEyxJgpMBkEqaDIBU0gQIgEH3539iavmnpQfX
      +OHG8vH9fIw//N//w+meUaeKk4qcAAEA0zQfLXOwLAyr8NPC9DTV23eSmZtB3iJA2ghiNMLs
      FL1XrjABZOfvkq+uBWB6eprGtkNkhi4yvmDQVv6o3K8vj/DlxZEn/sz25kr+129fe5GVS5uc
      GAFAp7qhgVogbUdJKICxwNDQFFX6KEYqwfTIBG2HHvUCXu1qZm97/RN/xesW5H9H2jTE+MQo
      buqbm2kEloxp7kYVFifHUOvbqA36sd3buD0+jkHrSsHhMg81FUEnq5aKgAABUCgrD/NwaZrq
      8RP2u4gmsnTu6aKtNgR2jmz8CrEs1Djfb5KKiOwErwPZCV69FtkJliTByQBIJc3BOYCNbRWu
      2KKqhV22bdtYlo2qFq7iYtn28u02H14y8dGze+7O0nNv3pnSf8Q0TTTN+SuXilIHgGmZaKog
      tazxvjgYAIPuz/8/ff52/vv7rwAQuX2Ofz45xP/4h/+KJzvJ98evoHhcZPIqr77zC1oqH90C
      c3Aswh/PDDhVvFQkHD0K5PHXUqfEmclBnRsGZ1Lsb60CbHqv3WLf27+mrdrH0txdTlzvoeXd
      l50sVypCzs4BVBc7d1YwNDQHRoSUXUGZRwOWWMr4qarwoSgKZeXV6JkkGUeLlYqR45NgX+0O
      lqbvsDAySHj7bnRFAXQUNY+5fFdU2zQxFEXeH0Bad44HQHP7qWKJM2NZOhsfnvXrpaZcYeju
      BKZpMDE6hKeiHnkdB2m9ORgAlUBFOW5Fo2tnI7a3Gp+mUF5RhUtX2XXoKMrMbb74/HNOXR6m
      ZVuLc6VKRWtTdILjMyN0Dyd489iBlWHQ+GyMSDy75vNelHw+j8vl/P7JMAx0XYDVLRRq0XRd
      iAukr7V9NkUAViOXQjxNLoVYnVwKIUnPIAMglTQhApCevsP3l/qxlkdjIwM9pPIw82CIxQzY
      Vo6R3h4WcptytCYJTIgAZKNjTIze595C4czfsdERsgZEpx+QzEFktI/BBYWw2/mxrVRcxDhk
      gELXK4cZvNxNy/uvPvEvueQUvXdiHHvv7SeOKAyORRicWHixZT6DKEdfTLOwAO3Dox34PM4f
      ldoMnN9qD7mr2BZaYmQ+vfKr7OIsZ/sm2brnKKEf3R1mKZNnNrb0oqtclSirME3TRNU0TEsO
      Ff9S4gQAhe0HD/D9mRvYZmEDesK1fHjoKJPXT3N7qo7OhtDKow9ur+eVLjGaY/Iw6OYlxBzg
      IdVbQ3ulwf3Iozu/KHoZ+w8fZPzmJSIpw8HqpGIkRCPMSMfJaiHK3GDlUswupKiuriafjqN5
      Q7g1m3R8AcsTWl4tKhthqxFpD7BZGmFCDIF0X2ilENXtp762sChOL3s45FHwhSocqU0qbs7H
      U5IcJAMglTQBhkA2lpFnKZUBVaeszIeqKGDb5LJpMjkD3e3F53EjwNBWKjKOB8DKpzn51Rfk
      vJWYqQWCbYc5tq+V5MwQJ871URYqI5FIs//1d2mvDaw87+bIDDdG5hys/BFR+gCWaRYmnQJ8
      U4hUi6BXhShYuNtNvukYvzzUBJh89/lnxDoaGLx5m4Nvf0hrpZd0ZJRvunto/+BRl3h4PMoX
      5wedK1wqCg7PASxmp6Js2dq4/LNGQyhALBshlQ1SES4cuvIGK/AYadLP/kOS9FwcDoCC16uS
      Sj+6/UXGMHCpXjQ1TX7517ZpklcUeU6wtO4cHgIp1LXv4uK5c3TVv4m1OMaDpMpuf5hUpc7t
      O6O8uqeZB4O9eCsbnyh2a3057x5qc6zyx4kzB7CWx91OVyJWLWttH8c7wbZtMjXcw7Xbo9ju
      MIdffYX6sB8zl6Tv6hVGZ+OE6tp4+VAXZe5H/xOyE/w02Qle3Vrbx/EAPC8ZgKfJAKxOnhMs
      Sc8gAyCVNBkAqaQJEACTu1evE1v+KTt/j977kcIPVporJ36gfyLqWHVScXO8Eww2c2PjeA8d
      pAIwkhEmojp7WqvIRKeZzRjERh+wq6nyiSNqN4anuT4861TRTzBNC01z/rvEXD70KMAcWLha
      nrV9BAjAs01PT9O6aw9LI/3MZ21qPI/ezZGJGH+6OOxgdVIxcP5r65myTE3GqWtopLnJx/2H
      wyJJWkcC7AEUvB6bdNoGn0I2l8PjdpGbH2N4eo7pr/4dK5fGqPRweEf1yrO2N1fy8bEdDtb9
      iCidYNGGHeLUInAnGGwyc8N8drKP+rpyZueSvPHB+ySHLrNUsYt9W2uwzRRnvz3D7vc+oHp5
      QZBshD1NNsJWJ3wn2LZt0slFUlkDjz9IwOchn02juDy4NBWwyabTqB4/ruX3UwbgaTIAqxP+
      pHhFUfAHy/EHH/3O7fU9/gg8Pv9Tz5Okn8v5eEqSg2QApJImRABsO08ikebhZCSVTGCYNpaR
      IzI7w9T0DIl0ztEapeIkRgCsaU6e6FsJwLWLJ4mmctzpPsPVvkHuDQ9w+ZZseknrT4hJ8Ooy
      TM+m6Xr7DRoDTx/ZuD40zdWhGYdqe5K1fFVmp1mWJcRRF1iuRRHjjDDLNNm1tZb3Dm176t8E
      DoCfPXuaOfHlv+GrauG1145QWeZeeT/vTsb45vKIoxVKm0fOtDdbAKBm2wH+rm0/sYl+vv3y
      JB//3S94eHC0c2sNv33X+W9dAHP5lqBOK9wgQ6Br8YhSi2HQ3ly16r85v9UARamB9Hli6QOU
      ZSaJZv2U+UzuDo5R29KCP1yBV32A9dhzdrdWs3974zP/5oskG2Gr1yIbYX8pxcM77xzh9Pdf
      kteDHDn2Gn7djVdJcua7LzFdAQ68eQzZCpPWmxBLIZ6HXArxNLkHWJ08KV6SnkEGQCppMgBS
      SRMiAPnIEN2D8yud4Ht9NxgfH+XyjQHylo1lpLl1pZvF/KacrkgCEyIAWriG6aFeLNsGO8v9
      8RkC1U34U5MMjseYvXubRU8VYZfzkzupuAhxGFTRQoSUJHHDJhi/RyawlaDXxa4Dezn+7UmG
      /TW8986hJ55zbXCK7sHnWwrxu/f2UhXy/fkHSkVPjAAoCl0tfnrvJ6mPTrO14xAaYHuDhMgQ
      95fj02weX1gSKvPQUhd+rtdz6ULs+CQBCBEAUKjatZfEdz1k1TQv7yu0vGaGe8lvPULn0j16
      J1rY1/zoA9/RVElnW71TBUtFQpyvQr2agNlHnGbKPBq5+AQ37qU42NXB9oOHmbx5kcWcnARL
      60uoTrCZz2EpOi5dxbZMDAt0XUOxbQzDQNX1wh0kkZ3g1chO8OrEXwu0THO5ebi+U1G1lStA
      oCjoLnmDJGn9OR9PSXKQUHuAn2ImusRsXIzLJRr5vBB7KCOfR9d1IdbgG4aBrmli1LLG9nEm
      ALbJYjSOv6oCl20RnZ1ADzcR8qqk4wtY3gDG4gx5bxXVQS9mPks8laMi/OjCQWd7HvD7E/2O
      lC8VD4eGQBYj1y8wlbSwjBxXz37J9cEINjB4s5u5ZI7h68c5fu42GdMml5jn0g35YZfWnzMB
      UFw0NIWYnVrAyEfxNh7Gioxg2xYLmTyVfg+uYAPNgSXuTiw4UqJUGhybBAdqmkjOT5KevI+/
      sROFFGZulqxVjdejAQpbt3cwNTJI2hTmSK1UZBwLgN8fJpOKcm88R2uTjyaPyuj9B+hNrbiX
      5016oJ726jyD9+UtkqSN4VgANF+AqkyMAdtDta7Q2hrgzPkpWptDjz1Kobl9F5F7d8g4VahU
      1Jw7DKq42dbVjpqrBMDduIP2VpPmQKG7W9u0Fb8LdHc1rxzewXB69ctaSNLPIdRSiJ/iSv8Y
      N0fmnC4DEOkOMSaqpqIIcDk20zSX7xAjRi0C3yHm+WQymULTRwD5fB6XCI0ww0DTNCE+dCLV
      stb2EeMT9BxUVRVioRWApmlC1KKqqhB7Ini0fUQIwFrbZ9MGABDiQ/eQCLUoirLyn9MURREm
      APDs7eP8VntOInzgHhKlFlE+bCBWLWttn007B5Ck9SDGV5ckOUQGQCpp2qeffvqp00U8P5uF
      yWFOnDrHXEqjrrYCbaPHnnae/sunOXvlBgN37kCgkZqgzr3eS5y53IPlr6Qq5N/AZfA2ppFj
      rP8WYymNuvIybNtmfrSHH05fZEkJUVsVACtHf/c5Lt4cwlteS7jMswHdARvLyDN+5xajcYX6
      ygC2bXP95GdcvNHPwMBdfHXNhN0Wd65d4Pz1O7jDNZQH1r8WK59mqKebs5euMZfSaKqvBDPF
      5ZM/cGNwiqqGenxujaX5MU6fPM2DSJ76hurNvQew81FOXxrh6LsfEEiO0Dc6/wJeM83oosZH
      n3zCJ7/5DbubQyyN36QnEuSD919n4tZFZhIbeUO/HP3dl7g9Ns7szCIAVnqKE9dm+eWv/hOp
      kUuMRtNM9Hczqzfx/ht76btwnrixEVO9HAPXLtM3Ps7M9MNVu1lm02V89Nef8Mknv2JrpZ/J
      wetM2rX84s0DDFw8tyFX+EtGJ0n7tvCrX/+KysUebk1luX32OK6Oo7z9Uj3nz14nm0tw4UIv
      ncfeo9UX5Urv2OYOQHZqFN+2fVT4POzYvo35+Y0/QyyfzRKdGODrL77k3PUhDOD+3ShdL7Xj
      8Ybo2FLFfGxxAyvwsOfoX3F037aV86dT44PU7n0Ft+7iYGcz9ycTzMaS7NjWgjdYz44GhclI
      fkNq6Xz5dV7d3/HoeHpuitHB+3z11Z+4NjCGYdnMRxfZ3t6GN1DLrmaN8fn1/4II1bWzf2cz
      qm2SzKlU+DXG0jr7msopq9lBtTtGbGICq7adxrCP5radLC3MbO4+gGEa+JbvKO9yu8A2N/w1
      XYFq/svf/yO2ZfLg1nG+u+imSdUo1wrfJW7dg61Yf+avrC/DMPAFC++Dx+PBWjRRFGWlU+71
      eMiaG//eAOBu5Z/+5z9g2wa3Tn3NFc2D//FavF7ixsbUkoqOcersNVoP/hVbQyojLn1lKOpx
      u8kbBl5vYbHlw+bYpt4D+IIh4nNzmDYk4gncnhdxmRQLVXXhcntp27ub7Nw8QY/FbLzwrRZP
      xfFoL/YSKb5wOQszM9g2RCKLBAJedFUlmUqDbRCJpvD7X8wlZGzLRnO5cLl9bG9vIpHI4NI0
      kktLYJtEIkkCgfV/fzKLk5zrHubIux+ye0tl4VzkbJaMZYOdI5HMEwgHSUWjGDZk0ksoira5
      9wBaVTvlqa85fXaWpYU4+4+9teGvmUnOcP5ML76KAAvT47Qf/pCWiiRffX+SZHWA2JKbt/aF
      /vwfel75FP0DA0xN3uNBxEW3D/Z1dqJ2f8X5fAOzs0u89Ysgelkrpy6fZiLgYkmppzO8AUsk
      8mnu3Olnauo+96cVrpSp7G5UOXXtPlXlPmYmZtn7Vhe1psHJy2eYDnpIWLW8X77+tUwN9xBJ
      q4z0XueuqtG2az8Hdtbx3bcnqdBTKHVdhKubaNTvcOLkacylRdpeenPzN8KMbIpIbBG3P0x5
      cCOPvhTYtk0muchCIoXuC1JdEUQB0okYC8kcoYpKyrwbuDDOzBOJRsjmC8MsVfdRW1OOmUky
      v5DEH6ok5PegYJFcjJHIWlRUVuJ1bUAALINIJEI2XxjSKJqX2toK0osREqk83kCYcNCHis1S
      PEY8bVJeWYXPvf61ZJIxovF04QdFobyqDr8LFiJzZCydqqoKXJqKmc8QjcZQ3EEqywObPwCS
      9HNs6jmAJP1cMgBSSZMBkEqaDIBU0mQApJImAyCVNBkAqaTJAEglTQZAKmkyAFJJkwGQSpoM
      gFTSZACkkiYDIJU0GQCppMkASCVNBkAqaf8B/IOVtwdxnMwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='average distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='destination and cancel' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='month with most cancel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='reasons for delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAfNUlEQVR4nO3dZ3RcZ37f8e+90/sAg14IgCDA3kBSrCrUrspqtavVetdZxz722sd5kWMn
      L5JznOTdvkzixDkncUvx8fGu15vN+ni1q06JEnsBCBYUohIA0dvMYHq7JS9AUqJESiI55NwZ
      PJ93GM0d/nTn/ue59z7lSrqu6wjCGiUXOoAgFJIoAGFNEwUgrGlFWQC6rrO4uFjoGEIJKMoC
      AMjlcoWOIJSAoi0AQcgHUQDCmiYKQFjTRAEIa5ooAGFNEwUgrGmiAIQ1TRSAsKaZP/tCJBJB
      UZRCZHkgqVSKYDBY6BhCkftcAdhsNqxWayGyfGW6rhOPx3E6nYWOAkA2mzXMPhNZ7i2Xy2E2
      m5Ek6a7XP1cAdrv9iYV6WLquc2xsnivXZgodBVjN89kdWyhPIst/fGkfXpvlS98nyzI2m+2x
      ZvmqTCYTFovlywugYHJL/OPPTnHk+69R47gVS41z8r2TlG9/iu3rKu96+3IizcBSsgBBBVXT
      Ch0hbwxyEawTHO4n0FLJ0FiI21PUEkuz5JwuFqdnKZ1dLhiJIQpA1zT6prPsO7gbdXaIrLpa
      ArPzS6xr34o/G2QpJUpAyD9DFICmrBDNmiAtYVIjhJNZ0JPMzUZwOh14fTKTU+KOj5B/BrgG
      0ImO9RDKKJw/fx4lvsLAVAR/IMRMIkPm0nm0TIKEa4q97ZUY41JTKBUFLwBdy9Ezmua1734D
      vwwoIY59cJ3BmMbuw0fZVOcHLcX5D06znIVKY9xVE0pEwQsAycLTr7yEdPtkzFzG1186tPqf
      bt+yku0ceOHriJ9/Id+kYlwXSNd1JqamqaiuKXQUALLZDFarMe53P4ksLqsZ+Sv0NWQyGcP0
      A2SzWYP3Azwgq0nG8xU6Yx43XdfJomEzQBaAjIGyFIOiLYBoNoMWizzQNm6LjbIi6OkWnhxD
      FUA8OEtEdVNX5UUC1GySqckpUqpMVW0DAa/jznsnYxFC2QfrCW73l7PHXpfn1EIxM0Q/wG1X
      r3RxqauTtKIDCr0XzjAXzaJnE4xMzBY6nlCCjNMCKEGSWg2NviShRIZ6n040kqFxcwtNFa6v
      dNElCA/KIC2ATnikF0/bNtobfYxOhdBxsL2jncELH/DW+yeZDsYputtVguEZogXQdY2e3lGm
      TGHmSRLKLrNvUy3+una+UddOdHGU4ycvUv7dr2GMGQBCqTBEAWhKhIRnI7/98hEkSaL71AeE
      YmES04tUNq3DbLIgy5JRmiuhhBiiAPR0hvadO+HWeX77pk3EJRsBv8zVC6fQbD4Ofe0I4gam
      kG9F2xN8ZXQE2e99oO0qHU7q3Q+2zVfJks1mDdPjaaTeVyNlKbme4Gqni/pKYwyFEIqXOK0W
      1rSibQH6lpc5GYkWOgbwaBPRX21txWsTY7wLxRgFoKmc+eCXLCVNSJJMWUMbB3dvhlSIy12X
      mI9mqG3vYP/mhjubpBWViJ4tYOj80IrvEqykGKMA0Mk5q3ntxSNIusJHx94jkmxlaeAa3tZ9
      PNXgI5M1/mJdQvExSAGAmo4xNTlFNhFEtVXhsme4Oh5Cj3UxciVHw6bd7N5YLy5ahLwyTAFo
      2RRLy0vomorVIqFpKqpuY+f+56iyZDj94VmCLfViSqSQV4b5QbV4q+jo6GDv3r149DjhhBl/
      BSSTCpLFhsdmQhUrowh5ZpgWQAnd5FdvLAMakqeOzW4X/h1bOHHmPXqQKWveTpXoChbyzBgF
      IJt54bXf+fzrVa1867ut99xEjI4W8sEYBfAQ9lRX8+36+kLHMNxQCOHBGOYaQBAKoWhbgKH5
      MF2L6ULHAEBRFMxmY+xKRclhNn+yKsTRTQ34HKJ1uh9jfGsAqRBdfTdAkqlqaKWx2o8sqSzP
      LeKuqsVuuvvtp0dmePtGqDBZi8iWunJRAF/AOKdAK+MMhs3UVpcz3Xueq+OL6CiMXrtGTHQC
      C4+JcQoA8JRV0dDYwsFnDxIe7ichDnzhMTNUAdwmW/34XGkyxT/WTTA4QxaArsSIJa1YxQp/
      wmNmnItgIJWIEgpamei/gnv9DtwW0JQskXAIk03G7fFiNRuyZoUiZZyjybuOemmR3v5h/Bv2
      sWdDDRJm6lvqmRnqpX9giGhaDAYS8qtoJ8W/39XDsmaAoaE6KKqR+gHuzvLK9hbKXYUZRCUm
      xT9G2+srqBdDIT7HSAddMTDOKZAgFEDRtgBvj0xx6fJ4oWOUrD9+ags7qssLHeOxM0YBaAof
      v/MLVnKr56qVTdtZ54wSczaxdV0AtAxXzlyk8cAzVNw67c+qGomc6Cl7XFSt6C4NH4oxCgDA
      18BrR47cWQY9Fx5joH+OTesCqLEQS7qDnQa45hVKi2EKQEmEGBwYQJIkPIE66ivr8WZOEUpu
      Rg/OU1ZZJy5YhLwz0DElIckykiSt3qqSbFRXulhYXGZ+Jkhto1gGUcg/w7QAZlcZGzduvOtJ
      MLU1VZzpG0A3+dniMX3B1oLwcAxSABJSdIZfvfEGsHoRfKBjA46KOkyhbuzb24wSVCgxxjiu
      ZBPPffMH93jdyfPf+2f33MRqkvEYZLScjo5kkMfY5yuLWTbG/8/jVrRDIWZnZ0VP8D0YqSfY
      SFnuNxTCQBfBgvDkGeMU6CGsZFJkosG8fZ5ZllnnLsvb5wnFwVAFMHDpBPMxHbCwsWMvlZY0
      /b39pC1l7NixGaf5k+YrmEmQjOSvJ9huMosCWIMMdQo0Pj3Pth272b17OwGHysXT57HXtVJl
      XuHjC33iOcFC3hmqAGSLHZ/fj9/vw6ZGSVrr2NBQQ8vmrVhDi8QLHVAoOYY6BYrNDfPmr36J
      LLk48LWn8GmzdF2W8FgzrATj5AodUCg5hioAT207z7/8Hay3On0rDh9hdnYBRTXhqPDjKGw8
      oQQZ6hTos5bnZ1FlM9HlZao2tIoCEPLOUAWwq2Mfn170weV2EQ2FcNa00bGx4f4bCsJDMtQp
      UE3t3T273ooGdlXc+8Cvcnhwl+VvxpJJNtRvgfCEGKoAHoTHYqPe7S90DKHIFW0BwOo4nNse
      9kHVwtpWtAUwHgsyMLvaM1Dj8LCtvK7AiYRiZIATX4VLbx5j4dZfycluPuqbW/0jF+Kffvxj
      zg1MFSydUNoMUACgqeqdYQ66rt5ZkWBldo7qTZtILi4i1n8QHgdDnALpWpy+ri6mgOzyGErN
      6t2g2aUl6pr3kBi5yGxUYZ3XEHGFEmKMI0qyUFFbSwWQ0oPEZQmUFW4Mz1NhGicTixIcn2fd
      TtEXIOSXIQpAkmzUNDRQAyTUWSYiEJmZxFy/nkqPE93azOD8DCoNiKnxQj4ZogBcfi+3Z/fK
      Vhdeh4VgLMfWrVtYV+EGPUs21s1KFgJicSwhj4p2TnDnyHVUnxOASruLNl9VwbKIOcH3ZqQs
      Jbc8eoPLT3114SfFC8WtaAtA1XUyilroGIBORlXhEbNYTPJdi4IJT0YBC0BH11ZXsZFvrUGj
      6zqapiPLqyvbaLqOrutI0u0lEz/Z+tL8AlMLy4WJ/hh8r30D9R53oWOsOQUsAIXuX/+CQW87
      v/P8XgCC/Wf4q9MT/Kvf+wHmxBTHT14Gi5msZubgc1+noawwj/oRSldBT4Fs7hqqiLKcgwoL
      DC1l2NVcDmj0Xu1j19Fvsq7cTnzxBqd7rtPwbEch4wolqLBDIWQLbW0+RkeDoITI6GU4LDKQ
      IJV2Ue6zI0kSbn8FUjJBpqBhhVJU8LFAzsoNJBaHWRkdxNe+GZMkAWZkOYt666mouqaiygYI
      K5Scgh9TJqsLvxrnzIzKlrrbs37tlPtgdGIOVVWYHhvBWV6NMZbCFUpJAQtAwl3mxyKb2Nxe
      A44K7BKUlZVjlmU2dxxAm+vnrTff5PTlCRqbxTggIf+Koic4Oj/K5Yk0Tx/YhonV26Uf9PQR
      shqjl1HXNSTp0X5LvtbUSKXz0de9MFLvq5Gy3K8nuCgK4LPE8uj3Z6SDzkhZxPLognAPRTsU
      YjEVJ7g890T+LZ/VTpNXrBxdigxRAMn5Qc5PSTy/tx1Jkrgx1Et963YicyM4q9pwW7KMDQxT
      0bYVn3W1CYtk0sTj2hPJV+P0iAIoUYY4BcqGp5mbmOBmbHVA2fTNG2RUCC1MkcjB0ngfY3ET
      XqsYLCbklyEKAElm6/49DF68hKLdfU2ejc1ybTTOwT2bDPIYOqGUGKMAAKwBmt1xxsOfDHhI
      rSxw7P3jmKsacJvF4S/kn3EKAIn2jp1MXLlKVl1tBRz+al75zuu4QiMML8QKnE8oRQYqAJBt
      laz3Z7kZTn/ymtnNjj07uNl7iVBKrA4k5Jch7gK5m/ay8VaSlh17cK7bitsCzZv3YraDxVTD
      4f12MBmqXoUSYIgCMDu8d4LIVhe1VS4AHC7vrVclnJ67b0M2uH2UVVc+kXxW2RC7SXgMivab
      dZgtBOyuQscQilzRFkAipzAfTxU6BgC5bBZL7sl0yn2Zx53FaTHjtZXOwHQDFICOquRIJtNg
      suBy2ldXR9B1spkU6ayC2WrHYbPeNSn+3dFpzl4aK1zsNeqVDQ38cFdboWPkTcELQM0mOXXs
      PbI2H2oyiq91Hwe3NhCbH+bEhUFcHgfxRJZdh47SXClOeYT8KngBhMcvozYc4qVdtYDKsTff
      JLK+moHeQfYcfZkGv43k0hjHe6/T/Py+QscVSkyB7ytqBOdDNDbV3PrbRJ3bTTgXIp324ves
      LgTq8JVjyaRI3/+DBOGhFLgAJGx2ieSnOrhSqopVsiObUii3XtYVBUWWCt9cCSWn4AVQ1bKR
      0e7zpBSNRPAm0ymZcoeXyjKZgZEpVDXH+PB1nIFaUQBC3hX8mHJUbODw5hQfvf1rdHsZh555
      GodZZuOew/R3X+Ktt67gr23lwK6WQkcVSlDRzgn+fxevMKYY43EZmqYhG+RB2487y966Cl5Y
      /9XmYhfDnOCiLQAxKf7ejHTQGSmLmBQvCPdQ8GuAh3V5bpm35qOFjgGU/inQ4cZqtlWV5/Uz
      jcIABaAy1t1PYM8OfEBmeYzRVDlbG/2gpeg6cR7f5g7aa/13bTUXT3ElISbJPAlt5b5CR3hs
      DPCzpbM8NcPtYW1KYpnZcBKAdHCW5ZzK1OQURXehIhQFAxTA/c3OLdGyeRue+DKhrCgBIf8M
      XAAZFhdjVFbXUFtrY3IqXOhAQgkywDWAhN2ukU7rYJfIZnLYrBaySzcZmVti7p030DIpqHGy
      u7U0L8SEwjFAAci0dbTx9ttvMVnpZSmY5JmX/NwcGKTjuZfZ2liOriY4++F5QjkoL525GIIB
      GKAAJOyVbbzyYhXJjILd5cVlt+DduhfZstqJIpmc7HvmECZjdPwKJaRoe4KHJm7iCTyZSfFf
      JpvLYrVYCx0DeDxZfHYrbuuDN73F0BNsgBbg4XisFuq9hZ8htjoUwmyYLzqTMU6WYlC0BZBU
      ciwlk3n5LJMsUW5/9KezCMXHEAWg6zkScRWXx44EJBMxbA43kpYjHAqT1SQ8fj9u+ydN+3Ao
      xEIsP0MhfDYbv9G2MS+fJRQXQ/QDqLl5Tp8auPN398VTrKRyDF46zZXrI4yPDtDdP17AhEKp
      MkQLcG9pFhfTbHv+Gapd5s9dvAhCPhiiBbg3J1u21nHmnX/inY8uEE7mxHggIe8MXABQ1bqb
      733/Nzm40cuH750m8+WbCMIDMUQByKYK1OQYKxmVdHiSlYwLp01hfHiCRFbF5SvDjoYxFh8U
      SokhrgEk2c7R5zo4dewtFIuXpw4fxG62YpOinDr2NprVy65nDyBuVAr5VrQ9wecHB8m589MR
      5rRY2FdT+9BZxJzgezNSlpLrCW7yeg0xKV4oboa4BhCEQinaFmAuGWVhSf3C95hlEzsCopUQ
      7s8QBZANjtAXDrB7QzkSMNZ/DXuZj5nlHLu3bUDWUvRfHaRp5268ltVzuLSaI5P94gdkWGQx
      flr4YoY4BTJ5Kpgf7QddBz3D5Mwi7kA9jvg0o3MrLNwYIO6ouHPwC0K+GKIAZLMXlx4npoES
      GifjacFts7Bp11amuk/SPZNl18Z1hY4plCBDFIAky2xrtNE7mWB8dJ71bbXIgMnuxa2mUJ1+
      bKaiu1srFAFDFABIBDZtJzbUy2Q0Ta1ntctrfqQPvW0/G9QZBufiBc4olCKDFABgrsCh9BGX
      1uGwymSjM/ROZti5qYX2XbuY7rlILCdaASG/DNUTrOSy6JIZi1lG11QUDcxmE5KuoygKstmM
      LEnous7ZoV4yni/uZbTIJp6p3fBYM4ue4PszUpai6Ak2f2oytySbsNxunyQJs+XuSdnr3GVU
      P+TwBUG4zVAF8CBMkozNVLTxBYMo2iNoaiHM+LIBnhupQ07JYbEYY8WuXE5kuRclp2Aymwxy
      CqSrREIxXAE/Zl0jtDiLxV+PxyaRiq6g2z3kVuZRnBUE3DbUXJpYSsHvdd/5iLfP9vPG+RsF
      iS+UjgLdBdIYu3qB+YSGlkvTfe5dekZD6MDQtW5CqSyj1z7i5IVBMqpOJrLApb7hwkQVSlph
      CkCyUFXnYXEhSi67gqu2AzU4BrpGJKvgt9uweOuodcSYMMhTYITSVLB+AG+glmRwjtTCJM66
      TWh6Ck1ZIqtVYLPKgERL23pmR0dIi7mQwmNSsAJwun0kkiFuTudorHdSb9a5efMmloZmbo95
      s7hraS7LcGNqpVAxhRJXsAIwOTwE4kFGZAcBk0RTi4uTZxdpbvB86l0Sja3tLI0PY4D7PUIJ
      KtxtUMlKy5YWTOrqCs/W2o20rNOoc65GqqprwmEBs6WSfR1tTOSqChZVKF2GGgrxVem6zi/e
      O8PYkjHaBVVVMRnk4QUiy71pqrr6+Ngve1J8OBxGUZQnGu5hrKys4Pf7v/yNT4CiKJjNxuhT
      FFnu7X7F+Ll0LpcLozcKuq6TSqXwer2FjoJ+a6CeUXo8jdT7aqQsiqJgMn2FnmCr1RhPOvki
      uq5jMpkMMdJQ13VkWTbMfpMkSWS5B1mWMZs/v8iyceYDFDFZNs5uFFnu7X6rixvjBK2ISZJk
      mPNcQGS5j/tlMU6JCkIBiAIQ1jTTj370ox8VOsTDiMVieD0uJvo7OX2xF1wBAh4HK/NjRHHj
      ssLUYA9pZyVu66PXeSo8x8fHP6Cnf5CJ6Sj1rfWQCHLmo+MMzcSpq6/BYkowOrSEr8KLElui
      f3yJygo/+VrNSFMVFsZ7GVrWqAt4QNdZmb/BxyfOsJi2UF9dhozKWO8FTnf2IXsqKXfbCc2N
      kZA8OC0akwM9ZJ2VuB5xn2iqwsJEH0OLCnUVXtBzXL94ijNdVxkcGkby1lPhNjPed5HTnX1I
      7grKPQ7C82PEcOO06kwN5Of70TWFqaErnD7XxUw4R01NJSYtw/Wu05y/Noq3qgG3zUwuvsiZ
      kycYnYtTVV2FVY0XdwuQmLlGX8jLiy8eZrr3IgvxHPHwPJGUSmJxjJ6ZHBWu/HTErCwtULXx
      IK+//jrfeGE/DjXHhdPnaHrqRfY1KZy+eANNzzA3E0LTc/R1d2P1lud1B9+83kn/0AQzyxEA
      cskgFy6PcejFl6mIXefyVJz41BWuR8p5+cVDTFw9z1IiRyw0TzSlEpu/Qf+CSiAP+2Tyeif9
      Q+NMB1ez6Nkkkwkb3379dV7/zmtsqvOQmL5K/4qfl188xOS1CyzGc8RD80TSGvGFMXrnlbx8
      P6mVRVbw8+Irr9LkWKFnaJ6FoQss2Nr45tFdnD1xClXX6Dp7hqY9R9lRmeNczzi6kiruApi8
      scLW3eux2by01gcIhVeHTqvpKBevjHLwyF7y1Q8ZXZmjp+sc7354gulgAjWbJmX301xuo7x5
      H9bkKNlbS5XOD10h6m9nY11++ylath/i8J6N2MyrbUoiGsRX04rPZqV17w5Whie4ObrCjj2t
      WG0+WmvLCEVXl5NR0mG6rk1w4GBHXvZJ8/ZDHN6zGZtpNUsukyY008+7b73D+Z4bqMDN0RW2
      d9zKUldOKBIDQE2v0Hl1jIOH9uQli7O8jh2bWrHKGql0DrfHzPRNle07GjA7Kmi16yxrQdJq
      PXXlTqraNmJbWiRJkd8FUmQzjltfgNVsJSFpqKkIpy+8T+X6bZTb87eUYtveF1m/WyMbX+LE
      R+8jHX0Bm+X27pOxWGV0HRZGL3Nj2sLTr2zL26nP/WiSjtV86z677MBiCpGTzNhvHVVWk5WM
      pKEmw5zq/ICqtp2U5XGffJrFU8Vv/vMfomsqN6+d4HiXjWqTGbv8yfeTljSU5AqnLh6jasP2
      vGbJxpY4d/YinvUd7G700jlgxXbr591hMaOgIJsdyBIgWbCZdDSK/CLYa1NYiuUAiCZjWM1W
      TA4fz77yOpsdQbqGF/P2b+k6WCwWXGU1NFVIxLMSyWQGFUCNkkzZMZmgekMH3/vWM4xc7iSS
      /uLVqx+V1WQjllo9BVFii2RtPvx2hcXo6lCWSCqGzWTF5Czj6Kuv02Ze4PLo0mNKoyHLFixW
      O83bNpJZCuL71PcTScWwmqyYnX6OfvN1NlqX6B7JTxYtHeZcZy9t+4/S0VaLLJlxWxOE4hq6
      rrOUzeLBg6Ytk1N0tFSUqMmOjSJvARq2bub9D08SDbiIpGw8s9NDOAySbGbDrv2cP3WWycrn
      WFdmf+R/a7z3LFNRE1YyhFJVfL3SgbVC4tjxM1gzy1RteRaLtDpzx1ZWT8eGZS5fvs7hA9vJ
      wzU4oDDW38vszE0ml6HbprKxrQVH/AQfn4mQXA6x++uvUI2Ndz/8iEiFk0jaybNlbpYWQZIs
      tO9+inOnLzBV8SyN/kfZJwrj/b3MzE4ytaTRbVdpaiijr2sAm8/JytIcrXteotFfxXsffkwk
      4CSSdvDsLg/BICBbaN+1n3OnzzNV+ahZYHF8gIVYBsdwH9OYaWjbSPOWFj76+ANm/SYS7gY8
      JhdNlXDq9BlM6QjVmw5gQS3e0aCzs7PU19eTioVZSWTxlgVw2czkMkk0kx2bWSKXSpCR7Ljt
      j17nmpJlJRwmo0r4yspx2szoWo7QchDV5KCi3IssqSQSCk6XHTSFeDyN0+PGlJeWXmNlaYlk
      brVVkc1WAoEKJCVJMBzB4vJTfmtJydv7xFcWwGkzk00nwWzHapbIpeJkZQcu26PsE42V5SWS
      2dtZLJQHAqjJKCvxJBaHl4DfjfSpLHe+n3QSzfzJ95OV7Y+YBbKpGKFw7NZDFGU8ZeW47WYS
      kRCxtEZ5RSU2s4Su5ggFg2hmB+V+L6ZSKABBeBRFfQ0gCI9KFICwpokCENY0UQDCmiYKQFjT
      RAEIa5ooAGFNEwWwxg28/z/5i3f67vvf1Wya82fPkfnST9Lofecv+f0/+Nd0L6wOxbjws//E
      n7/d/0j59EyEf/yr/8x/+eu/ZWQuyvkzZ+/OEh/jP/zRH/Gn/+1/8F//7M841j3GPTu2Zi7y
      7/70H0h8ZsGToh4KITw6VcmSUT4Zs7Qyd4PuniEUi4+OpzqI9J/lr//yx7waDrHv4IvUmJY5
      33kNydfI/o4tOG49xkfPRrnUE+Y739jGua5B9ry6jZaO55ClSlKhKYYXNcqlZWKOZpo9GTq7
      riH5mtjfUcu1K3O010qMxzzUOSP0DEwgu6t5at925ro+4r0L43ztt3ayeP0i/+tv/o5XV8Ls
      PfgCLQEboGIpa+B3/sUf40+P8t//4h9oavoTWl1Jui5cJKJ7Ofz0ATy6QiqTRdeyDF/pZnQu
      TFl9m2gBhLvFY3Gqm9txJYb4yRvnKKttxOfxsnnbNspdOf7v3/499tr1ZMdO8qtznyxZHw9O
      M0kFTx/excSlC+jA0vAFzg4uEJm8xk9++lPe/qiT4PI0P/2bn6CWr6PKBvHMDD/5P3/PG29+
      QDieJhJL0tS2iczYCX55apjy6jrKvBVs2rKFppZ1d7IEXJ/97ZZwBFpor1AYGp/k+M9/StDR
      QJ18k//9s1Not5sFJUlCc9Le3sK1938uWgDh01TiwRlOdo+Ris6yYHfjKduJy+mksbkZb2KA
      s52DhE0upEwEb1nqzpZzg50sJxWuD4eJ3bjIZOoP7/5oa4Dv//AP0Kc7eU+v5vf3bMUsQTre
      RyYj8e3f+5eUu2Quvd/NxZFOovOTyJYI3t01uF0e6tc14k+EcTqdNDQ3c8+ZFpKOpktYsnHO
      dXbjiMOEnkLy+ND11S00TWNqsJPJcJbJmQVRAMKnxTn5YScHf/ffEAif5e9Ox5AkGRMa6ZyG
      1+rFX17Jt3/rhzT7TcRSt9atV5P09E5y8NDLODwmjmz1cq5nnm2f+mRPoAq3w4LiKcORWWE5
      maVcUlAAu7+SgMsCLPH+8QF+99//CZHun3M8dHc6SZIwo5HJaehm6e6lTnSdlck+hsJOftBa
      x41AObtf+W2ONLuJRBPIsdXrnOjEFS6HvPzbP3yVD3/850U+J9gAK8MVu+j8GKfPdTF0vYeg
      VE2TK8ap81dIKiqaLcD+Xe040rO8+eFFytYfYld1jDfePUH/0BgmXx2NlV6U+DKd/ct843vf
      YkNDHY0+jTMjKbYGsoRtTWz055iMWunY1oLd5aNMDvH228e5MZti/aZKRgbCHDmyA7ASn+3n
      zJVhsqqCtayZbes8jIwtsv3ALlyyCWdmjl9/eBF/03aqPBZQEnSeOsf14SEGp0I8/c3fYOu6
      Suor7bz/q1/Tc32QtC3A+jKJ3pksRw5sZ/LyaXrHllCVnBgNKqxt4iJYWNNEAQhrmigAYU37
      /6TRnXnQcftTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='reasons for delay (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='relation of weather to destiantion arirport' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
